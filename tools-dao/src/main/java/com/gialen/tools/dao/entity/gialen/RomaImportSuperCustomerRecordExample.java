package com.gialen.tools.dao.entity.gialen;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RomaImportSuperCustomerRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected int offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected int limit;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public RomaImportSuperCustomerRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public void setOffset(int offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public int getOffset() {
        return offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public void setLimit(int limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public int getLimit() {
        return limit;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andImportCustomerIdIsNull() {
            addCriterion("import_customer_id is null");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdIsNotNull() {
            addCriterion("import_customer_id is not null");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdEqualTo(Long value) {
            addCriterion("import_customer_id =", value, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdNotEqualTo(Long value) {
            addCriterion("import_customer_id <>", value, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdGreaterThan(Long value) {
            addCriterion("import_customer_id >", value, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("import_customer_id >=", value, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdLessThan(Long value) {
            addCriterion("import_customer_id <", value, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdLessThanOrEqualTo(Long value) {
            addCriterion("import_customer_id <=", value, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdIn(List<Long> values) {
            addCriterion("import_customer_id in", values, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdNotIn(List<Long> values) {
            addCriterion("import_customer_id not in", values, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdBetween(Long value1, Long value2) {
            addCriterion("import_customer_id between", value1, value2, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andImportCustomerIdNotBetween(Long value1, Long value2) {
            addCriterion("import_customer_id not between", value1, value2, "importCustomerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIsNull() {
            addCriterion("customer_id is null");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIsNotNull() {
            addCriterion("customer_id is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerIdEqualTo(Long value) {
            addCriterion("customer_id =", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotEqualTo(Long value) {
            addCriterion("customer_id <>", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdGreaterThan(Long value) {
            addCriterion("customer_id >", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("customer_id >=", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdLessThan(Long value) {
            addCriterion("customer_id <", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdLessThanOrEqualTo(Long value) {
            addCriterion("customer_id <=", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIn(List<Long> values) {
            addCriterion("customer_id in", values, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotIn(List<Long> values) {
            addCriterion("customer_id not in", values, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdBetween(Long value1, Long value2) {
            addCriterion("customer_id between", value1, value2, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotBetween(Long value1, Long value2) {
            addCriterion("customer_id not between", value1, value2, "customerId");
            return (Criteria) this;
        }

        public Criteria andImportTimeIsNull() {
            addCriterion("import_time is null");
            return (Criteria) this;
        }

        public Criteria andImportTimeIsNotNull() {
            addCriterion("import_time is not null");
            return (Criteria) this;
        }

        public Criteria andImportTimeEqualTo(Date value) {
            addCriterion("import_time =", value, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeNotEqualTo(Date value) {
            addCriterion("import_time <>", value, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeGreaterThan(Date value) {
            addCriterion("import_time >", value, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("import_time >=", value, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeLessThan(Date value) {
            addCriterion("import_time <", value, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeLessThanOrEqualTo(Date value) {
            addCriterion("import_time <=", value, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeIn(List<Date> values) {
            addCriterion("import_time in", values, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeNotIn(List<Date> values) {
            addCriterion("import_time not in", values, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeBetween(Date value1, Date value2) {
            addCriterion("import_time between", value1, value2, "importTime");
            return (Criteria) this;
        }

        public Criteria andImportTimeNotBetween(Date value1, Date value2) {
            addCriterion("import_time not between", value1, value2, "importTime");
            return (Criteria) this;
        }

        public Criteria andIsExistIsNull() {
            addCriterion("is_exist is null");
            return (Criteria) this;
        }

        public Criteria andIsExistIsNotNull() {
            addCriterion("is_exist is not null");
            return (Criteria) this;
        }

        public Criteria andIsExistEqualTo(Boolean value) {
            addCriterion("is_exist =", value, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistNotEqualTo(Boolean value) {
            addCriterion("is_exist <>", value, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistGreaterThan(Boolean value) {
            addCriterion("is_exist >", value, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_exist >=", value, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistLessThan(Boolean value) {
            addCriterion("is_exist <", value, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistLessThanOrEqualTo(Boolean value) {
            addCriterion("is_exist <=", value, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistIn(List<Boolean> values) {
            addCriterion("is_exist in", values, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistNotIn(List<Boolean> values) {
            addCriterion("is_exist not in", values, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistBetween(Boolean value1, Boolean value2) {
            addCriterion("is_exist between", value1, value2, "isExist");
            return (Criteria) this;
        }

        public Criteria andIsExistNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_exist not between", value1, value2, "isExist");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdIsNull() {
            addCriterion("original_store_super_mgr_id is null");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdIsNotNull() {
            addCriterion("original_store_super_mgr_id is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdEqualTo(Long value) {
            addCriterion("original_store_super_mgr_id =", value, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdNotEqualTo(Long value) {
            addCriterion("original_store_super_mgr_id <>", value, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdGreaterThan(Long value) {
            addCriterion("original_store_super_mgr_id >", value, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdGreaterThanOrEqualTo(Long value) {
            addCriterion("original_store_super_mgr_id >=", value, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdLessThan(Long value) {
            addCriterion("original_store_super_mgr_id <", value, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdLessThanOrEqualTo(Long value) {
            addCriterion("original_store_super_mgr_id <=", value, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdIn(List<Long> values) {
            addCriterion("original_store_super_mgr_id in", values, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdNotIn(List<Long> values) {
            addCriterion("original_store_super_mgr_id not in", values, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdBetween(Long value1, Long value2) {
            addCriterion("original_store_super_mgr_id between", value1, value2, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreSuperMgrIdNotBetween(Long value1, Long value2) {
            addCriterion("original_store_super_mgr_id not between", value1, value2, "originalStoreSuperMgrId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdIsNull() {
            addCriterion("original_store_id is null");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdIsNotNull() {
            addCriterion("original_store_id is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdEqualTo(Long value) {
            addCriterion("original_store_id =", value, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdNotEqualTo(Long value) {
            addCriterion("original_store_id <>", value, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdGreaterThan(Long value) {
            addCriterion("original_store_id >", value, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdGreaterThanOrEqualTo(Long value) {
            addCriterion("original_store_id >=", value, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdLessThan(Long value) {
            addCriterion("original_store_id <", value, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdLessThanOrEqualTo(Long value) {
            addCriterion("original_store_id <=", value, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdIn(List<Long> values) {
            addCriterion("original_store_id in", values, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdNotIn(List<Long> values) {
            addCriterion("original_store_id not in", values, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdBetween(Long value1, Long value2) {
            addCriterion("original_store_id between", value1, value2, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andOriginalStoreIdNotBetween(Long value1, Long value2) {
            addCriterion("original_store_id not between", value1, value2, "originalStoreId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeIsNull() {
            addCriterion("activated_time is null");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeIsNotNull() {
            addCriterion("activated_time is not null");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeEqualTo(Date value) {
            addCriterion("activated_time =", value, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeNotEqualTo(Date value) {
            addCriterion("activated_time <>", value, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeGreaterThan(Date value) {
            addCriterion("activated_time >", value, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("activated_time >=", value, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeLessThan(Date value) {
            addCriterion("activated_time <", value, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("activated_time <=", value, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeIn(List<Date> values) {
            addCriterion("activated_time in", values, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeNotIn(List<Date> values) {
            addCriterion("activated_time not in", values, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeBetween(Date value1, Date value2) {
            addCriterion("activated_time between", value1, value2, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andActivatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("activated_time not between", value1, value2, "activatedTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateIsNull() {
            addCriterion("expire_date is null");
            return (Criteria) this;
        }

        public Criteria andExpireDateIsNotNull() {
            addCriterion("expire_date is not null");
            return (Criteria) this;
        }

        public Criteria andExpireDateEqualTo(Date value) {
            addCriterion("expire_date =", value, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateNotEqualTo(Date value) {
            addCriterion("expire_date <>", value, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateGreaterThan(Date value) {
            addCriterion("expire_date >", value, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateGreaterThanOrEqualTo(Date value) {
            addCriterion("expire_date >=", value, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateLessThan(Date value) {
            addCriterion("expire_date <", value, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateLessThanOrEqualTo(Date value) {
            addCriterion("expire_date <=", value, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateIn(List<Date> values) {
            addCriterion("expire_date in", values, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateNotIn(List<Date> values) {
            addCriterion("expire_date not in", values, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateBetween(Date value1, Date value2) {
            addCriterion("expire_date between", value1, value2, "expireDate");
            return (Criteria) this;
        }

        public Criteria andExpireDateNotBetween(Date value1, Date value2) {
            addCriterion("expire_date not between", value1, value2, "expireDate");
            return (Criteria) this;
        }

        public Criteria andHandledTimeIsNull() {
            addCriterion("handled_time is null");
            return (Criteria) this;
        }

        public Criteria andHandledTimeIsNotNull() {
            addCriterion("handled_time is not null");
            return (Criteria) this;
        }

        public Criteria andHandledTimeEqualTo(Date value) {
            addCriterion("handled_time =", value, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeNotEqualTo(Date value) {
            addCriterion("handled_time <>", value, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeGreaterThan(Date value) {
            addCriterion("handled_time >", value, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("handled_time >=", value, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeLessThan(Date value) {
            addCriterion("handled_time <", value, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeLessThanOrEqualTo(Date value) {
            addCriterion("handled_time <=", value, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeIn(List<Date> values) {
            addCriterion("handled_time in", values, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeNotIn(List<Date> values) {
            addCriterion("handled_time not in", values, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeBetween(Date value1, Date value2) {
            addCriterion("handled_time between", value1, value2, "handledTime");
            return (Criteria) this;
        }

        public Criteria andHandledTimeNotBetween(Date value1, Date value2) {
            addCriterion("handled_time not between", value1, value2, "handledTime");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Boolean value) {
            addCriterion("is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Boolean value) {
            addCriterion("is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Boolean value) {
            addCriterion("is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Boolean value) {
            addCriterion("is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Boolean> values) {
            addCriterion("is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Boolean> values) {
            addCriterion("is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeIsNull() {
            addCriterion("actually_activated_time is null");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeIsNotNull() {
            addCriterion("actually_activated_time is not null");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeEqualTo(Date value) {
            addCriterion("actually_activated_time =", value, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeNotEqualTo(Date value) {
            addCriterion("actually_activated_time <>", value, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeGreaterThan(Date value) {
            addCriterion("actually_activated_time >", value, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("actually_activated_time >=", value, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeLessThan(Date value) {
            addCriterion("actually_activated_time <", value, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("actually_activated_time <=", value, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeIn(List<Date> values) {
            addCriterion("actually_activated_time in", values, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeNotIn(List<Date> values) {
            addCriterion("actually_activated_time not in", values, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeBetween(Date value1, Date value2) {
            addCriterion("actually_activated_time between", value1, value2, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andActuallyActivatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("actually_activated_time not between", value1, value2, "actuallyActivatedTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeIsNull() {
            addCriterion("expire_remain_time is null");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeIsNotNull() {
            addCriterion("expire_remain_time is not null");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeEqualTo(Integer value) {
            addCriterion("expire_remain_time =", value, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeNotEqualTo(Integer value) {
            addCriterion("expire_remain_time <>", value, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeGreaterThan(Integer value) {
            addCriterion("expire_remain_time >", value, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("expire_remain_time >=", value, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeLessThan(Integer value) {
            addCriterion("expire_remain_time <", value, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeLessThanOrEqualTo(Integer value) {
            addCriterion("expire_remain_time <=", value, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeIn(List<Integer> values) {
            addCriterion("expire_remain_time in", values, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeNotIn(List<Integer> values) {
            addCriterion("expire_remain_time not in", values, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeBetween(Integer value1, Integer value2) {
            addCriterion("expire_remain_time between", value1, value2, "expireRemainTime");
            return (Criteria) this;
        }

        public Criteria andExpireRemainTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("expire_remain_time not between", value1, value2, "expireRemainTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table roma_import_super_customer_record
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}