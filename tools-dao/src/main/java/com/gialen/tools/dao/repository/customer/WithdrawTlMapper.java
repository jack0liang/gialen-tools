package com.gialen.tools.dao.repository.customer;

import com.gialen.tools.dao.dto.WithDrawStatusTypeDto;
import com.gialen.tools.dao.entity.customer.WithdrawTl;
import com.gialen.tools.dao.entity.customer.WithdrawTlExample;
import java.util.List;

@org.springframework.stereotype.Repository
public interface WithdrawTlMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    long countByExample(WithdrawTlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    int insert(WithdrawTl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    int insertSelective(WithdrawTl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    List<WithdrawTl> selectByExample(WithdrawTlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    WithdrawTl selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(WithdrawTl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdraw_tl
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(WithdrawTl record);

    WithDrawStatusTypeDto selectGroupByStatus(Long userId);
}