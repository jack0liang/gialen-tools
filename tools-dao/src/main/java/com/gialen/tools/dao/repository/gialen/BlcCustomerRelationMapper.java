package com.gialen.tools.dao.repository.gialen;

import com.gialen.common.model.PageRequest;
import com.gialen.tools.dao.dto.ActivityUserDetailDto;
import com.gialen.tools.dao.dto.CommunityDto;
import com.gialen.tools.dao.entity.gialen.BlcCustomerRelation;
import com.gialen.tools.dao.entity.gialen.BlcCustomerRelationExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@org.springframework.stereotype.Repository
public interface BlcCustomerRelationMapper {

    /**
     * 统计店经的店主和vip社群数据
     * @param managerId
     * @param month
     * @param day
     * @return
     */
    CommunityDto countStoreAndVipCommunityNumForManager(@Param("managerId") Long managerId, @Param("month") Integer month, @Param("day") Integer day);

    /**
     * 批量统计店主的vip数据
     * @param storeIdList
     * @param month
     * @param day
     * @return
     */
    List<CommunityDto> batchCountVipCommunityNumForStore(@Param("storeIdList") List<Long> storeIdList, @Param("month") Integer month, @Param("day") Integer day);

    /**
     * 查询店经的月新增vip列表
     * @param managerId
     * @param day
     * @param month
     * @param page
     * @return
     */
    List<CommunityDto> getMonthNewVipListForManager(@Param("managerId") Long managerId, @Param("day") Integer day,
                                                     @Param("month") Integer month, @Param("page") PageRequest page);

    /**
     * 统计店经的月新增vip总数
     * @param managerId
     * @param month
     * @return
     */
    Long countMonthNewVipNumForManager(@Param("managerId") Long managerId, @Param("month") Integer month);

    /**
     * 统计活跃或静默店主数量
     * @param userId
     * @param month
     * @param userType
     * @param dataType
     * @return
     */
    Long countActivityOrSilenceStoreTotal(@Param("userId") Long userId, @Param("month") Integer month,
                                          @Param("userType") Byte userType, @Param("dataType") Byte dataType);

    /**
     * 查询活跃或静默店主列表
     * @param userId
     * @param month
     * @param userType
     * @param dataType
     * @return
     */
    List<ActivityUserDetailDto> getActivityOrSilenceStoreList(@Param("userId") Long userId, @Param("month") Integer month,
                                                              @Param("userType") Byte userType, @Param("dataType") Byte dataType,
                                                              @Param("page") PageRequest pageRequest);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    long countByExample(BlcCustomerRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int deleteByExample(BlcCustomerRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int insert(BlcCustomerRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int insertSelective(BlcCustomerRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    List<BlcCustomerRelation> selectByExample(BlcCustomerRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    BlcCustomerRelation selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") BlcCustomerRelation record, @Param("example") BlcCustomerRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") BlcCustomerRelation record, @Param("example") BlcCustomerRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(BlcCustomerRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blc_customer_relation
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(BlcCustomerRelation record);
}