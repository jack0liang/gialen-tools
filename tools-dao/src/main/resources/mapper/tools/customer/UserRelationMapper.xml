<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gialen.tools.dao.repository.customer.UserRelationMapper">
  <resultMap id="BaseResultMap" type="com.gialen.tools.dao.entity.customer.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="state_data" jdbcType="TINYINT" property="stateData" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="store_id" jdbcType="BIGINT" property="storeId" />
    <result column="store_mgr_id" jdbcType="BIGINT" property="storeMgrId" />
    <result column="store_super_mgr_id" jdbcType="BIGINT" property="storeSuperMgrId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="invitor_id" jdbcType="BIGINT" property="invitorId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, create_time, update_time, state_data, user_id, store_id, store_mgr_id, store_super_mgr_id, 
    company_id, invitor_id
  </sql>
  <select id="selectByExample" parameterType="com.gialen.tools.dao.entity.customer.UserRelationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and offset != null and limit &gt; 0">
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gialen.tools.dao.entity.customer.UserRelationExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.gialen.tools.dao.entity.customer.UserRelation" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_relation (id, create_time, update_time, 
      state_data, user_id, store_id, 
      store_mgr_id, store_super_mgr_id, company_id, 
      invitor_id)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{stateData,jdbcType=TINYINT}, #{userId,jdbcType=BIGINT}, #{storeId,jdbcType=BIGINT}, 
      #{storeMgrId,jdbcType=BIGINT}, #{storeSuperMgrId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{invitorId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.gialen.tools.dao.entity.customer.UserRelation" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="stateData != null">
        state_data,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="storeMgrId != null">
        store_mgr_id,
      </if>
      <if test="storeSuperMgrId != null">
        store_super_mgr_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="invitorId != null">
        invitor_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stateData != null">
        #{stateData,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeMgrId != null">
        #{storeMgrId,jdbcType=BIGINT},
      </if>
      <if test="storeSuperMgrId != null">
        #{storeSuperMgrId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="invitorId != null">
        #{invitorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gialen.tools.dao.entity.customer.UserRelationExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stateData != null">
        state_data = #{record.stateData,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.storeMgrId != null">
        store_mgr_id = #{record.storeMgrId,jdbcType=BIGINT},
      </if>
      <if test="record.storeSuperMgrId != null">
        store_super_mgr_id = #{record.storeSuperMgrId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.invitorId != null">
        invitor_id = #{record.invitorId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element getActivityOrSilenceStoreListis automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      state_data = #{record.stateData,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      store_mgr_id = #{record.storeMgrId,jdbcType=BIGINT},
      store_super_mgr_id = #{record.storeSuperMgrId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      invitor_id = #{record.invitorId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gialen.tools.dao.entity.customer.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stateData != null">
        state_data = #{stateData,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeMgrId != null">
        store_mgr_id = #{storeMgrId,jdbcType=BIGINT},
      </if>
      <if test="storeSuperMgrId != null">
        store_super_mgr_id = #{storeSuperMgrId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="invitorId != null">
        invitor_id = #{invitorId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gialen.tools.dao.entity.customer.UserRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_relation
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state_data = #{stateData,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=BIGINT},
      store_id = #{storeId,jdbcType=BIGINT},
      store_mgr_id = #{storeMgrId,jdbcType=BIGINT},
      store_super_mgr_id = #{storeSuperMgrId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      invitor_id = #{invitorId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="countMonthManagerNumForDirector" resultType="java.lang.Integer">
    select count(DISTINCT(cl.user_id)) as monthNewStoreManagerNum
	from user_relation r
    left join user_level l on r.user_id = l.user_id
	LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
	where r.store_id = #{directorId} and l.level_type in (3,5) and cl.new_level_type in (3,5)
	and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
  </select>

  <select id="countStoreNumForDirector" resultType="java.lang.Integer">
    select count(DISTINCT(cl.user_id)) as newStoreNum
	from user_relation r
    left join user_level l on r.user_id = l.user_id
	LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
	where r.store_id = #{directorId} and l.level_type in (2,4) and cl.new_level_type in (2,4)
    <if test="month != null">
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
    </if>
    <if test="day != null">
      and DATE_FORMAT(cl.valid_start_time,'%Y%m%d') = #{day}
    </if>
  </select>

  <select id="countVipNumForDirector" resultType="java.lang.Integer">
    select count(1) as newVipNum
    from user u
    left join user_level l on u.id = l.user_id
    where u.store_id = #{directorId} and l.level_type = 1
    <if test="month != null">
      and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    </if>
    <if test="day != null">
      and DATE_FORMAT(u.create_time,'%Y%m%d') = #{day}
    </if>
  </select>

  <select id="countTotalNumForDirector" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select
    count(1) as totalNum,
    count(case when l.level_type in (3,5) then 1 else null end) as totalStoreManagerNum,
    count(case when l.level_type in (2,4) then 1 else null end) as totalStoreNum,
    count(case when l.level_type = 1 then 1 else null end) as totalVipNum
    from user_relation r
    LEFT JOIN user_level l on r.user_id = l.user_id
    LEFT JOIN user u on r.user_id = u.id
    where r.store_id = #{directorId}
    <if test="userName != null and userName != ''">
      and u.username like concat(#{userName},"%")
    </if>
  </select>

  <select id="countVipNumForManager" resultType="java.lang.Integer">
    select count(1) as newVipNum
    from user u
    left join user_relation r on u.id = r.user_id
    left join user_level l on r.user_id = l.user_id
    where r.store_super_mgr_id = #{managerId} and l.level_type = 1
    <if test="month != null">
      and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    </if>
    <if test="day != null">
      and DATE_FORMAT(u.create_time,'%Y%m%d') = #{day}
    </if>
  </select>

  <select id="countMonthManagerNumForManager" resultType="java.lang.Integer">
    select count(DISTINCT(cl.user_id)) as monthNewStoreManagerNum
	from user_relation r
    left join user_level l on r.user_id = l.user_id
	LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
	where r.invitor_id = #{managerId} and l.level_type in (3,5) and cl.new_level_type in (3,5)
	and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
  </select>

  <select id="countStoreNumForManager" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select
    <if test="month != null">
      count(DISTINCT(case when r.invitor_id != #{managerId} then cl.user_id else null end)) as monthNewIndirectStoreNum,
      count(DISTINCT(case when r.invitor_id = #{managerId} then cl.user_id else null end)) as monthNewDirectStoreNum
    </if>
    <if test="day != null">
      count(DISTINCT(cl.user_id)) as dayNewStoreNum
    </if>
    from user_relation r
    left join user_level l on r.user_id = l.user_id
    LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
    where r.store_super_mgr_id = #{managerId} and l.level_type in (2,4) and cl.new_level_type in (2,4)
    <if test="month != null">
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
    </if>
    <if test="day != null">
      and DATE_FORMAT(cl.valid_start_time,'%Y%m%d') = #{day}
    </if>
  </select>

  <select id="countTotalNumForManager" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select
--     count(1) as totalNum,
    count(case when l.level_type in (3,5) and r.invitor_id = #{managerId} then 1 else null end) as totalStoreManagerNum,
    count(case when l.level_type in (2,4) and r.invitor_id != #{managerId} and r.store_super_mgr_id = #{managerId} then 1 else null end) as totalIndirectStoreNum,
    count(case when l.level_type in (2,4) and r.invitor_id = #{managerId} and r.store_super_mgr_id = #{managerId} then 1 else null end) as totalDirectStoreNum,
    count(case when l.level_type = 1 and r.store_super_mgr_id = #{managerId} then 1 else null end) as totalVipNum
    from user_relation r
    LEFT JOIN user_level l on r.user_id = l.user_id
    LEFT JOIN user u on r.user_id = u.id
    where r.store_super_mgr_id = #{managerId} or r.invitor_id = #{managerId}
    <if test="userName != null and userName != ''">
      and u.username like concat(#{userName},"%")
    </if>
  </select>

  <select id="getMonthUserChildListForDirector" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select u.id as customerId, u.phone, u.username as realName, u.create_time as dateCreated
    from user u
    left join user_level l on u.id = l.user_id
    <if test="childType==4">
      LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
      where l.level_type in (3,5) and cl.new_level_type in (3,5)
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
    </if>
    <if test="childType==2 or childType ==3">
      LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
      where l.level_type in (2,4) and cl.new_level_type in (2,4)
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
    </if>
    <if test="childType==1">
      where l.level_type = 1 and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    </if>
    and u.store_id = #{directorId}
    GROUP BY u.id
    order by u.create_time desc
    limit #{page.offset}, #{page.limit};
  </select>

  <select id="getUserChildListForDirector" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select u.id as customerId, u.phone, u.username as realName, u.create_time as dateCreated
    from user u
    left join user_level l on u.id = l.user_id
    where u.store_id = #{directorId}
    <if test="childType==4">
      and l.level_type in (3,5)
    </if>
    <if test="childType==2 or childType ==3">
      and l.level_type in (2,4)
    </if>
    <if test="childType==1">
      and l.level_type = 1
    </if>
    <if test="userName != null and userName != ''">
      and u.username like concat(#{userName},"%")
    </if>
    order by u.create_time desc
    limit #{page.offset}, #{page.limit};
  </select>

  <select id="getMonthUserChildListForManager" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select u.id as customerId, u.phone, u.username as realName, u.create_time as dateCreated
    from user u
    left join user_relation r on u.id = r.user_id
    left join user_level l on u.id = l.user_id
    <if test="childType==4">
      LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
      where l.level_type in (3,5) and cl.new_level_type in (3,5)
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
      and r.invitor_id = #{managerId}
    </if>
    <if test="childType ==3">
      LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
      where l.level_type in (2,4) and cl.new_level_type in (2,4)
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
      and r.invitor_id != #{managerId} and r.store_super_mgr_id = #{managerId}
    </if>
    <if test="childType==2">
      LEFT JOIN user_level_change_log cl on l.user_id = cl.user_id
      where l.level_type in (2,4) and cl.new_level_type in (2,4)
      and DATE_FORMAT(cl.valid_start_time,'%Y%m') = #{month}
      and r.invitor_id = #{managerId}
    </if>
    <if test="childType==1">
      where l.level_type = 1 and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
      and r.store_super_mgr_id = #{managerId}
    </if>
    GROUP BY u.id
    order by u.create_time desc
    limit #{page.offset}, #{page.limit};
  </select>

  <select id="getUserChildListForManager" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select u.id as customerId, u.phone, u.username as realName, u.create_time as dateCreated
    from user u
    left join user_relation r on u.id = r.user_id
    left join user_level l on u.id = l.user_id
    <if test="childType==4">
      where l.level_type in (3,5) and r.invitor_id = #{managerId}
    </if>
    <if test="childType ==3">
      where l.level_type in (2,4) and r.invitor_id != #{managerId} and r.store_super_mgr_id = #{managerId}
    </if>
    <if test="childType==2">
      where l.level_type in (2,4) and r.invitor_id = #{managerId}
    </if>
    <if test="childType==1">
      where l.level_type = 1 and r.store_super_mgr_id = #{managerId}
    </if>
    <if test="userName != null and userName != ''">
      and u.username like concat(#{userName},"%")
    </if>
    order by u.create_time desc
    limit #{page.offset}, #{page.limit};
  </select>

  <select id="countMonthHasNewVipStoreNumForDirector" resultType="java.lang.Long">
    select count(DISTINCT r.store_mgr_id)
    from user u
    left join user_level l on u.id = l.user_id
    left join user_relation r on u.id = r.user_id
    left join user p on r.store_mgr_id = p.id
    where r.store_id = #{directorId} and l.level_type = 1 and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    <if test="storeName != null and storeName != ''">
      and p.username like concat(#{storeName},"%")
    </if>
  </select>

  <select id="getMonthNewVipListForDirector" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select p.id as storeId, p.username as storeName,
    <if test="day != null">
      count(case when DATE_FORMAT(u.create_time,'%Y%m%d') = #{day} then 1 else null end) as dayNewVipNum,
    </if>
    count(1) as monthNewVipNum
    from user u
    left join user_level l on u.id = l.user_id
    left join user_relation r on u.id = r.user_id
    left join user p on r.store_mgr_id = p.id
    where r.store_id = #{directorId} and l.level_type = 1 and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    <if test="storeName != null and storeName != ''">
      and p.username like concat(#{storeName},"%")
    </if>
    GROUP BY p.id
    order by count(1) desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="countMonthHasNewVipStoreNumForManager" resultType="java.lang.Long">
    select count(DISTINCT r.store_mgr_id)
    from user u
    left join user_level l on u.id = l.user_id
    left join user_relation r on u.id = r.user_id
    left join user p on r.store_mgr_id = p.id
    where r.store_super_mgr_id = #{managerId} and l.level_type = 1 and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    <if test="storeName != null and storeName != ''">
      and p.username like concat(#{storeName},"%")
    </if>
  </select>

  <select id="getMonthNewVipListForManager" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select p.id as storeId, p.username as storeName,
    <if test="day != null">
      count(case when DATE_FORMAT(u.create_time,'%Y%m%d') = #{day} then 1 else null end) as dayNewVipNum,
    </if>
    count(1) as monthNewVipNum
    from user u
    left join user_level l on u.id = l.user_id
    left join user_relation r on u.id = r.user_id
    left join user p on r.store_mgr_id = p.id
    where r.store_super_mgr_id = #{managerId} and l.level_type = 1 and DATE_FORMAT(u.create_time,'%Y%m') = #{month}
    <if test="storeName != null and storeName != ''">
      and p.username like concat(#{storeName},"%")
    </if>
    GROUP BY p.id
    order by count(1) desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="getActivityOrSilenceStoreList" resultType="com.gialen.tools.dao.dto.ActivityUserDetailDto">
    select store.id as userId, max(store.username) as realName, ifnull(max(invitor.username),'') as invitor, IFNULL(sum(o.money),0) as salesNum
    from gialen_customer.user_relation ur
    JOIN gialen_customer.user u on ur.user_id = u.id
    JOIN gialen_customer.user store on ur.store_mgr_id = store.id
    join gialen_customer.user_relation sr on store.id = sr.user_id
    LEFT JOIN gialen_customer.user invitor on sr.invitor_id = invitor.id
    LEFT JOIN gialen_order.orders o on ur.user_id = o.user_id and o.order_status in (2,3,4,5,6,10) and DATE_FORMAT(o.create_time,'%Y%m') = #{month} and o.is_parent=0
    <if test="userType == 4">
      where ur.store_id = #{userId}
    </if>
    <if test="userType == 3">
      where ur.store_super_mgr_id = #{userId}
    </if>

    <if test="storeName != null and storeName != ''">
        and store.username like concat(#{storeName},"%")
    </if>
    GROUP BY store.id
    <if test="dataType == 1">
      HAVING salesNum &gt; 0
    </if>
    <if test="dataType == 2">
      HAVING salesNum &lt;= 0
    </if>
    order by salesNum desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="countActivityOrSilenceStoreTotal" resultType="java.lang.Long">
    select count(1) from
    (select IFNULL(sum(o.money),0) as salesNum
    from gialen_customer.user_relation ur
    JOIN gialen_customer.user u on ur.user_id = u.id
    JOIN gialen_customer.user store on ur.store_mgr_id = store.id
    LEFT JOIN gialen_order.orders o on ur.user_id = o.user_id and o.order_status in (2,3,4,5,6,10) and DATE_FORMAT(o.create_time,'%Y%m') = #{month} and o.is_parent=0
    <if test="userType == 4">
      where ur.store_id = #{userId}
    </if>
    <if test="userType == 3">
      where ur.store_super_mgr_id = #{userId}
    </if>

    <if test="storeName != null and storeName != ''">
      and store.username like concat(#{storeName},"%")
    </if>
    GROUP BY store.id
    <if test="dataType == 1">
      HAVING salesNum &gt; 0
    </if>
    <if test="dataType == 2">
      HAVING salesNum &lt;= 0
    </if>
    ) t
  </select>

  <select id="getBigSuperMgrList" resultType="com.gialen.tools.dao.dto.BigSuperMgrDto">
    select u.id as superMgrId, u.phone, u.username

    from gialen_customer.user_relation ur
    left join gialen_customer.user u on ur.user_id = u.id
    LEFT JOIN gialen_customer.user_level ul on ur.user_id = ul.user_id

    where ul.level_type in (3,5) and u.id not in (1000,2000)
  </select>

  <select id="getChildUserList" resultType="java.lang.Long">
    select user_id
    from gialen_customer.user_relation
    where invitor_id = #{invitorId} and date_format(create_time, '%Y%m') &lt;= #{month}
  </select>

  <select id="getChildUserListByIds" resultType="java.lang.Long">
    select user_id
    from gialen_customer.user_relation
    where invitor_id in
    <foreach collection="invitorIds" item="invitorId" open="(" close=")" separator=",">
      #{invitorId}
    </foreach>
    and date_format(create_time, '%Y%m') &lt;= #{month}
  </select>
</mapper>