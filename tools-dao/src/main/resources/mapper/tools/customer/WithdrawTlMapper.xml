<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gialen.tools.dao.repository.customer.WithdrawTlMapper">
    <resultMap id="BaseResultMap" type="com.gialen.tools.dao.entity.customer.WithdrawTl">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="biz_order_no" jdbcType="VARCHAR" property="bizOrderNo"/>
        <result column="bank_card_no" jdbcType="VARCHAR" property="bankCardNo"/>
        <result column="biz_user_id" jdbcType="VARCHAR" property="bizUserId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="fee" jdbcType="DECIMAL" property="fee"/>
        <result column="progress" jdbcType="INTEGER" property="progress"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, biz_order_no, bank_card_no, biz_user_id, user_id, amount, fee, progress, remark,
        type, create_time, update_time
    </sql>
    <select id="selectByExample" parameterType="com.gialen.tools.dao.entity.customer.WithdrawTlExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from withdraw_tl
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null and offset != null and limit &gt; 0">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from withdraw_tl
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from withdraw_tl
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.gialen.tools.dao.entity.customer.WithdrawTl"
            useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into withdraw_tl (id, biz_order_no, bank_card_no,
        biz_user_id, user_id, amount,
        fee, progress, remark,
        type, create_time, update_time
        )
        values (#{id,jdbcType=BIGINT}, #{bizOrderNo,jdbcType=VARCHAR}, #{bankCardNo,jdbcType=VARCHAR},
        #{bizUserId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL},
        #{fee,jdbcType=DECIMAL}, #{progress,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
        #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.gialen.tools.dao.entity.customer.WithdrawTl"
            useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into withdraw_tl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bizOrderNo != null">
                biz_order_no,
            </if>
            <if test="bankCardNo != null">
                bank_card_no,
            </if>
            <if test="bizUserId != null">
                biz_user_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="fee != null">
                fee,
            </if>
            <if test="progress != null">
                progress,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="bizOrderNo != null">
                #{bizOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null">
                #{bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="bizUserId != null">
                #{bizUserId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="fee != null">
                #{fee,jdbcType=DECIMAL},
            </if>
            <if test="progress != null">
                #{progress,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.gialen.tools.dao.entity.customer.WithdrawTlExample"
            resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from withdraw_tl
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.gialen.tools.dao.entity.customer.WithdrawTl">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update withdraw_tl
        <set>
            <if test="bizOrderNo != null">
                biz_order_no = #{bizOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null">
                bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="bizUserId != null">
                biz_user_id = #{bizUserId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="fee != null">
                fee = #{fee,jdbcType=DECIMAL},
            </if>
            <if test="progress != null">
                progress = #{progress,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gialen.tools.dao.entity.customer.WithdrawTl">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update withdraw_tl
        set biz_order_no = #{bizOrderNo,jdbcType=VARCHAR},
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
        biz_user_id = #{bizUserId,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=BIGINT},
        amount = #{amount,jdbcType=DECIMAL},
        fee = #{fee,jdbcType=DECIMAL},
        progress = #{progress,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR},
        type = #{type,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectGroupByStatus" resultType="com.gialen.tools.dao.dto.WithDrawStatusTypeDto">
        SELECT
	sum((CASE WHEN progress = 0 THEN amount end)) as accountArrived
FROM
	withdraw_tl
WHERE
	user_id = #{userId}

  </select>
    <select id="countByUserIdAndOther" resultType="java.lang.Long">
        select count(id) from withdraw_tl where user_id =#{userId}
        and (create_time &gt;= '2020-09-01' or (progress = 0 and create_time &lt; '2020-09-01'))
    </select>
    <select id="selectByUserIdAndOther" resultMap="BaseResultMap">
 select * from withdraw_tl where user_id =#{userId}
        and (create_time &gt;= '2020-09-01' or (progress = 0 and create_time &lt; '2020-09-01'))
        order by create_time desc
        limit #{offset},#{limit}
  </select>
</mapper>