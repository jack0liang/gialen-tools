<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gialen.tools.dao.repository.gialen.BlcCustomerMapper">
  <resultMap id="BaseResultMap" type="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="CUSTOMER_ID" jdbcType="BIGINT" property="customerId" />
    <result column="CREATED_BY" jdbcType="BIGINT" property="createdBy" />
    <result column="DATE_CREATED" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="DATE_UPDATED" jdbcType="TIMESTAMP" property="dateUpdated" />
    <result column="UPDATED_BY" jdbcType="BIGINT" property="updatedBy" />
    <result column="CHALLENGE_ANSWER" jdbcType="VARCHAR" property="challengeAnswer" />
    <result column="DEACTIVATED" jdbcType="BOOLEAN" property="deactivated" />
    <result column="EMAIL_ADDRESS" jdbcType="VARCHAR" property="emailAddress" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="PASSWORD_CHANGE_REQUIRED" jdbcType="BOOLEAN" property="passwordChangeRequired" />
    <result column="RECEIVE_EMAIL" jdbcType="BOOLEAN" property="receiveEmail" />
    <result column="IS_REGISTERED" jdbcType="BOOLEAN" property="isRegistered" />
    <result column="TAX_EXEMPTION_CODE" jdbcType="VARCHAR" property="taxExemptionCode" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="CHALLENGE_QUESTION_ID" jdbcType="BIGINT" property="challengeQuestionId" />
    <result column="LOCALE_CODE" jdbcType="VARCHAR" property="localeCode" />
    <result column="SEX" jdbcType="SMALLINT" property="sex" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="BIRTH_DAY" jdbcType="VARCHAR" property="birthDay" />
    <result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
    <result column="CARD_NO" jdbcType="VARCHAR" property="cardNo" />
    <result column="COUNTRY" jdbcType="VARCHAR" property="country" />
    <result column="PROVINCE" jdbcType="VARCHAR" property="province" />
    <result column="CITY" jdbcType="VARCHAR" property="city" />
    <result column="IMAGE_URL" jdbcType="VARCHAR" property="imageUrl" />
    <result column="CUSTOMER_ADDRESS_ID" jdbcType="VARCHAR" property="customerAddressId" />
    <result column="SOURCE" jdbcType="VARCHAR" property="source" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
    <result column="TOTAL_CONSUME" jdbcType="DECIMAL" property="totalConsume" />
    <result column="LAST_LOGIN_DATETIME" jdbcType="TIMESTAMP" property="lastLoginDatetime" />
    <result column="LAST_LOGIN_IP" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="REGISTER_PLATFORM" jdbcType="VARCHAR" property="registerPlatform" />
    <result column="user_card_no" jdbcType="VARCHAR" property="userCardNo" />
    <result column="user_level_id" jdbcType="BIGINT" property="userLevelId" />
    <result column="point" jdbcType="BIGINT" property="point" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="encryption_balance" jdbcType="VARCHAR" property="encryptionBalance" />
    <result column="payment_password" jdbcType="VARCHAR" property="paymentPassword" />
    <result column="CONSUME_COUNT" jdbcType="INTEGER" property="consumeCount" />
    <result column="DISCOUNT" jdbcType="REAL" property="discount" />
    <result column="REBATE" jdbcType="REAL" property="rebate" />
    <result column="HIGHER_CUSTOMER_ID" jdbcType="BIGINT" property="higherCustomerId" />
    <result column="LAST_READ_NOTICE_TIME" jdbcType="TIMESTAMP" property="lastReadNoticeTime" />
    <result column="VERIFIED_EMAIL" jdbcType="VARCHAR" property="verifiedEmail" />
    <result column="OFFER_ID" jdbcType="BIGINT" property="offerId" />
    <result column="IS_POPULARIZE" jdbcType="CHAR" property="isPopularize" />
    <result column="SHOPPING_BAG" jdbcType="INTEGER" property="shoppingBag" />
    <result column="POPULARIZE_DATE" jdbcType="TIMESTAMP" property="popularizeDate" />
    <result column="DISTRIBUTION_LEVEL" jdbcType="INTEGER" property="distributionLevel" />
    <result column="uncheck_balance" jdbcType="DECIMAL" property="uncheckBalance" />
    <result column="encryption_uncheck_balance" jdbcType="VARCHAR" property="encryptionUncheckBalance" />
    <result column="rebate_balance" jdbcType="DECIMAL" property="rebateBalance" />
    <result column="encryption_rebate_balance" jdbcType="VARCHAR" property="encryptionRebateBalance" />
    <result column="POPULARIZE_RESULT" jdbcType="VARCHAR" property="popularizeResult" />
    <result column="SHOP_QR_CODE" jdbcType="VARCHAR" property="shopQrCode" />
    <result column="is_update" jdbcType="CHAR" property="isUpdate" />
    <result column="IS_UPDATE_PASSWORD" jdbcType="CHAR" property="isUpdatePassword" />
    <result column="UPDATE_PASSWORD_DATE" jdbcType="TIMESTAMP" property="updatePasswordDate" />
    <result column="SHOP_REGISTER_QR_CODE" jdbcType="VARCHAR" property="shopRegisterQrCode" />
    <result column="master_level" jdbcType="INTEGER" property="masterLevel" />
    <result column="app_token" jdbcType="VARCHAR" property="appToken" />
    <result column="CARD_BACK_IMG" jdbcType="VARCHAR" property="cardBackImg" />
    <result column="CARD_FACE_IMG" jdbcType="VARCHAR" property="cardFaceImg" />
    <result column="inviteCode" jdbcType="VARCHAR" property="invitecode" />
    <result column="REGION" jdbcType="VARCHAR" property="region" />
    <result column="SHOP_ID" jdbcType="BIGINT" property="shopId" />
    <result column="REAL_STATUS" jdbcType="INTEGER" property="realStatus" />
    <result column="user_level_new_id" jdbcType="VARCHAR" property="userLevelNewId" />
    <result column="VIRTUAL_COIN" jdbcType="DECIMAL" property="virtualCoin" />
    <result column="OFFER_COUPON" jdbcType="INTEGER" property="offerCoupon" />
    <result column="level_point" jdbcType="BIGINT" property="levelPoint" />
    <result column="level_point_temp" jdbcType="BIGINT" property="levelPointTemp" />
    <result column="user_level_new_id_temp" jdbcType="BIGINT" property="userLevelNewIdTemp" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="shop_store_id" jdbcType="BIGINT" property="shopStoreId" />
    <result column="USER_ORIGIN" jdbcType="INTEGER" property="userOrigin" />
    <result column="self_introduction" jdbcType="VARCHAR" property="selfIntroduction" />
    <result column="shop_logo" jdbcType="VARCHAR" property="shopLogo" />
    <result column="shop_banner" jdbcType="VARCHAR" property="shopBanner" />
    <result column="wx_qr_code" jdbcType="VARCHAR" property="wxQrCode" />
    <result column="REG_TYPE" jdbcType="TINYINT" property="regType" />
    <result column="WECHAT_NAME" jdbcType="VARCHAR" property="wechatName" />
    <result column="effective_time" jdbcType="BIGINT" property="effectiveTime" />
    <result column="is_payed" jdbcType="BOOLEAN" property="isPayed" />
    <result column="practice_super_store_be_time" jdbcType="TIMESTAMP" property="practiceSuperStoreBeTime" />
    <result column="is_login_first" jdbcType="BOOLEAN" property="isLoginFirst" />
    <result column="is_temp_store_customer" jdbcType="INTEGER" property="isTempStoreCustomer" />
    <result column="is_temp_super_customer" jdbcType="BOOLEAN" property="isTempSuperCustomer" />
    <result column="super_store_be_time" jdbcType="TIMESTAMP" property="superStoreBeTime" />
    <result column="login_first_data_time" jdbcType="DATE" property="loginFirstDataTime" />
    <result column="is_down_store" jdbcType="BOOLEAN" property="isDownStore" />
    <result column="first_login_app_date" jdbcType="TIMESTAMP" property="firstLoginAppDate" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="STREET" jdbcType="LONGVARCHAR" property="street" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CUSTOMER_ID, CREATED_BY, DATE_CREATED, DATE_UPDATED, UPDATED_BY, CHALLENGE_ANSWER, 
    DEACTIVATED, EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, PASSWORD, PASSWORD_CHANGE_REQUIRED, 
    RECEIVE_EMAIL, IS_REGISTERED, TAX_EXEMPTION_CODE, USER_NAME, CHALLENGE_QUESTION_ID, 
    LOCALE_CODE, SEX, PHONE, BIRTH_DAY, REAL_NAME, CARD_NO, COUNTRY, PROVINCE, CITY, 
    IMAGE_URL, CUSTOMER_ADDRESS_ID, SOURCE, NICKNAME, TOTAL_CONSUME, LAST_LOGIN_DATETIME, 
    LAST_LOGIN_IP, REGISTER_PLATFORM, user_card_no, user_level_id, point, balance, encryption_balance, 
    payment_password, CONSUME_COUNT, DISCOUNT, REBATE, HIGHER_CUSTOMER_ID, LAST_READ_NOTICE_TIME, 
    VERIFIED_EMAIL, OFFER_ID, IS_POPULARIZE, SHOPPING_BAG, POPULARIZE_DATE, DISTRIBUTION_LEVEL, 
    uncheck_balance, encryption_uncheck_balance, rebate_balance, encryption_rebate_balance, 
    POPULARIZE_RESULT, SHOP_QR_CODE, is_update, IS_UPDATE_PASSWORD, UPDATE_PASSWORD_DATE, 
    SHOP_REGISTER_QR_CODE, master_level, app_token, CARD_BACK_IMG, CARD_FACE_IMG, inviteCode, 
    REGION, SHOP_ID, REAL_STATUS, user_level_new_id, VIRTUAL_COIN, OFFER_COUPON, level_point, 
    level_point_temp, user_level_new_id_temp, user_type, shop_store_id, USER_ORIGIN, 
    self_introduction, shop_logo, shop_banner, wx_qr_code, REG_TYPE, WECHAT_NAME, effective_time, 
    is_payed, practice_super_store_be_time, is_login_first, is_temp_store_customer, is_temp_super_customer, 
    super_store_be_time, login_first_data_time, is_down_store, first_login_app_date, 
    position
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    STREET
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomerExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blc_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and offset != null and limit &gt; 0">
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomerExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blc_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and offset != null and limit &gt; 0">
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blc_customer
    where CUSTOMER_ID = #{customerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from blc_customer
    where CUSTOMER_ID = #{customerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomerExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from blc_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="CUSTOMER_ID" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomer" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into blc_customer (CUSTOMER_ID, CREATED_BY, DATE_CREATED, 
      DATE_UPDATED, UPDATED_BY, CHALLENGE_ANSWER, 
      DEACTIVATED, EMAIL_ADDRESS, FIRST_NAME, 
      LAST_NAME, PASSWORD, PASSWORD_CHANGE_REQUIRED, 
      RECEIVE_EMAIL, IS_REGISTERED, TAX_EXEMPTION_CODE, 
      USER_NAME, CHALLENGE_QUESTION_ID, LOCALE_CODE, 
      SEX, PHONE, BIRTH_DAY, 
      REAL_NAME, CARD_NO, COUNTRY, 
      PROVINCE, CITY, IMAGE_URL, 
      CUSTOMER_ADDRESS_ID, SOURCE, NICKNAME, 
      TOTAL_CONSUME, LAST_LOGIN_DATETIME, LAST_LOGIN_IP, 
      REGISTER_PLATFORM, user_card_no, user_level_id, 
      point, balance, encryption_balance, 
      payment_password, CONSUME_COUNT, DISCOUNT, 
      REBATE, HIGHER_CUSTOMER_ID, LAST_READ_NOTICE_TIME, 
      VERIFIED_EMAIL, OFFER_ID, IS_POPULARIZE, 
      SHOPPING_BAG, POPULARIZE_DATE, DISTRIBUTION_LEVEL, 
      uncheck_balance, encryption_uncheck_balance, 
      rebate_balance, encryption_rebate_balance, 
      POPULARIZE_RESULT, SHOP_QR_CODE, is_update, 
      IS_UPDATE_PASSWORD, UPDATE_PASSWORD_DATE, SHOP_REGISTER_QR_CODE, 
      master_level, app_token, CARD_BACK_IMG, 
      CARD_FACE_IMG, inviteCode, REGION, 
      SHOP_ID, REAL_STATUS, user_level_new_id, 
      VIRTUAL_COIN, OFFER_COUPON, level_point, 
      level_point_temp, user_level_new_id_temp, user_type, 
      shop_store_id, USER_ORIGIN, self_introduction, 
      shop_logo, shop_banner, wx_qr_code, 
      REG_TYPE, WECHAT_NAME, effective_time, 
      is_payed, practice_super_store_be_time, is_login_first, 
      is_temp_store_customer, is_temp_super_customer, 
      super_store_be_time, login_first_data_time, is_down_store, 
      first_login_app_date, position, STREET
      )
    values (#{customerId,jdbcType=BIGINT}, #{createdBy,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, 
      #{dateUpdated,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, #{challengeAnswer,jdbcType=VARCHAR}, 
      #{deactivated,jdbcType=BOOLEAN}, #{emailAddress,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, 
      #{lastName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{passwordChangeRequired,jdbcType=BOOLEAN}, 
      #{receiveEmail,jdbcType=BOOLEAN}, #{isRegistered,jdbcType=BOOLEAN}, #{taxExemptionCode,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{challengeQuestionId,jdbcType=BIGINT}, #{localeCode,jdbcType=VARCHAR}, 
      #{sex,jdbcType=SMALLINT}, #{phone,jdbcType=VARCHAR}, #{birthDay,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{customerAddressId,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{totalConsume,jdbcType=DECIMAL}, #{lastLoginDatetime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{registerPlatform,jdbcType=VARCHAR}, #{userCardNo,jdbcType=VARCHAR}, #{userLevelId,jdbcType=BIGINT}, 
      #{point,jdbcType=BIGINT}, #{balance,jdbcType=DECIMAL}, #{encryptionBalance,jdbcType=VARCHAR}, 
      #{paymentPassword,jdbcType=VARCHAR}, #{consumeCount,jdbcType=INTEGER}, #{discount,jdbcType=REAL}, 
      #{rebate,jdbcType=REAL}, #{higherCustomerId,jdbcType=BIGINT}, #{lastReadNoticeTime,jdbcType=TIMESTAMP}, 
      #{verifiedEmail,jdbcType=VARCHAR}, #{offerId,jdbcType=BIGINT}, #{isPopularize,jdbcType=CHAR}, 
      #{shoppingBag,jdbcType=INTEGER}, #{popularizeDate,jdbcType=TIMESTAMP}, #{distributionLevel,jdbcType=INTEGER}, 
      #{uncheckBalance,jdbcType=DECIMAL}, #{encryptionUncheckBalance,jdbcType=VARCHAR}, 
      #{rebateBalance,jdbcType=DECIMAL}, #{encryptionRebateBalance,jdbcType=VARCHAR}, 
      #{popularizeResult,jdbcType=VARCHAR}, #{shopQrCode,jdbcType=VARCHAR}, #{isUpdate,jdbcType=CHAR}, 
      #{isUpdatePassword,jdbcType=CHAR}, #{updatePasswordDate,jdbcType=TIMESTAMP}, #{shopRegisterQrCode,jdbcType=VARCHAR}, 
      #{masterLevel,jdbcType=INTEGER}, #{appToken,jdbcType=VARCHAR}, #{cardBackImg,jdbcType=VARCHAR}, 
      #{cardFaceImg,jdbcType=VARCHAR}, #{invitecode,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{shopId,jdbcType=BIGINT}, #{realStatus,jdbcType=INTEGER}, #{userLevelNewId,jdbcType=VARCHAR}, 
      #{virtualCoin,jdbcType=DECIMAL}, #{offerCoupon,jdbcType=INTEGER}, #{levelPoint,jdbcType=BIGINT}, 
      #{levelPointTemp,jdbcType=BIGINT}, #{userLevelNewIdTemp,jdbcType=BIGINT}, #{userType,jdbcType=VARCHAR}, 
      #{shopStoreId,jdbcType=BIGINT}, #{userOrigin,jdbcType=INTEGER}, #{selfIntroduction,jdbcType=VARCHAR}, 
      #{shopLogo,jdbcType=VARCHAR}, #{shopBanner,jdbcType=VARCHAR}, #{wxQrCode,jdbcType=VARCHAR}, 
      #{regType,jdbcType=TINYINT}, #{wechatName,jdbcType=VARCHAR}, #{effectiveTime,jdbcType=BIGINT}, 
      #{isPayed,jdbcType=BOOLEAN}, #{practiceSuperStoreBeTime,jdbcType=TIMESTAMP}, #{isLoginFirst,jdbcType=BOOLEAN}, 
      #{isTempStoreCustomer,jdbcType=INTEGER}, #{isTempSuperCustomer,jdbcType=BOOLEAN}, 
      #{superStoreBeTime,jdbcType=TIMESTAMP}, #{loginFirstDataTime,jdbcType=DATE}, #{isDownStore,jdbcType=BOOLEAN}, 
      #{firstLoginAppDate,jdbcType=TIMESTAMP}, #{position,jdbcType=VARCHAR}, #{street,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="CUSTOMER_ID" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomer" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into blc_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="dateCreated != null">
        DATE_CREATED,
      </if>
      <if test="dateUpdated != null">
        DATE_UPDATED,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="challengeAnswer != null">
        CHALLENGE_ANSWER,
      </if>
      <if test="deactivated != null">
        DEACTIVATED,
      </if>
      <if test="emailAddress != null">
        EMAIL_ADDRESS,
      </if>
      <if test="firstName != null">
        FIRST_NAME,
      </if>
      <if test="lastName != null">
        LAST_NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="passwordChangeRequired != null">
        PASSWORD_CHANGE_REQUIRED,
      </if>
      <if test="receiveEmail != null">
        RECEIVE_EMAIL,
      </if>
      <if test="isRegistered != null">
        IS_REGISTERED,
      </if>
      <if test="taxExemptionCode != null">
        TAX_EXEMPTION_CODE,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="challengeQuestionId != null">
        CHALLENGE_QUESTION_ID,
      </if>
      <if test="localeCode != null">
        LOCALE_CODE,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="birthDay != null">
        BIRTH_DAY,
      </if>
      <if test="realName != null">
        REAL_NAME,
      </if>
      <if test="cardNo != null">
        CARD_NO,
      </if>
      <if test="country != null">
        COUNTRY,
      </if>
      <if test="province != null">
        PROVINCE,
      </if>
      <if test="city != null">
        CITY,
      </if>
      <if test="imageUrl != null">
        IMAGE_URL,
      </if>
      <if test="customerAddressId != null">
        CUSTOMER_ADDRESS_ID,
      </if>
      <if test="source != null">
        SOURCE,
      </if>
      <if test="nickname != null">
        NICKNAME,
      </if>
      <if test="totalConsume != null">
        TOTAL_CONSUME,
      </if>
      <if test="lastLoginDatetime != null">
        LAST_LOGIN_DATETIME,
      </if>
      <if test="lastLoginIp != null">
        LAST_LOGIN_IP,
      </if>
      <if test="registerPlatform != null">
        REGISTER_PLATFORM,
      </if>
      <if test="userCardNo != null">
        user_card_no,
      </if>
      <if test="userLevelId != null">
        user_level_id,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="encryptionBalance != null">
        encryption_balance,
      </if>
      <if test="paymentPassword != null">
        payment_password,
      </if>
      <if test="consumeCount != null">
        CONSUME_COUNT,
      </if>
      <if test="discount != null">
        DISCOUNT,
      </if>
      <if test="rebate != null">
        REBATE,
      </if>
      <if test="higherCustomerId != null">
        HIGHER_CUSTOMER_ID,
      </if>
      <if test="lastReadNoticeTime != null">
        LAST_READ_NOTICE_TIME,
      </if>
      <if test="verifiedEmail != null">
        VERIFIED_EMAIL,
      </if>
      <if test="offerId != null">
        OFFER_ID,
      </if>
      <if test="isPopularize != null">
        IS_POPULARIZE,
      </if>
      <if test="shoppingBag != null">
        SHOPPING_BAG,
      </if>
      <if test="popularizeDate != null">
        POPULARIZE_DATE,
      </if>
      <if test="distributionLevel != null">
        DISTRIBUTION_LEVEL,
      </if>
      <if test="uncheckBalance != null">
        uncheck_balance,
      </if>
      <if test="encryptionUncheckBalance != null">
        encryption_uncheck_balance,
      </if>
      <if test="rebateBalance != null">
        rebate_balance,
      </if>
      <if test="encryptionRebateBalance != null">
        encryption_rebate_balance,
      </if>
      <if test="popularizeResult != null">
        POPULARIZE_RESULT,
      </if>
      <if test="shopQrCode != null">
        SHOP_QR_CODE,
      </if>
      <if test="isUpdate != null">
        is_update,
      </if>
      <if test="isUpdatePassword != null">
        IS_UPDATE_PASSWORD,
      </if>
      <if test="updatePasswordDate != null">
        UPDATE_PASSWORD_DATE,
      </if>
      <if test="shopRegisterQrCode != null">
        SHOP_REGISTER_QR_CODE,
      </if>
      <if test="masterLevel != null">
        master_level,
      </if>
      <if test="appToken != null">
        app_token,
      </if>
      <if test="cardBackImg != null">
        CARD_BACK_IMG,
      </if>
      <if test="cardFaceImg != null">
        CARD_FACE_IMG,
      </if>
      <if test="invitecode != null">
        inviteCode,
      </if>
      <if test="region != null">
        REGION,
      </if>
      <if test="shopId != null">
        SHOP_ID,
      </if>
      <if test="realStatus != null">
        REAL_STATUS,
      </if>
      <if test="userLevelNewId != null">
        user_level_new_id,
      </if>
      <if test="virtualCoin != null">
        VIRTUAL_COIN,
      </if>
      <if test="offerCoupon != null">
        OFFER_COUPON,
      </if>
      <if test="levelPoint != null">
        level_point,
      </if>
      <if test="levelPointTemp != null">
        level_point_temp,
      </if>
      <if test="userLevelNewIdTemp != null">
        user_level_new_id_temp,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="shopStoreId != null">
        shop_store_id,
      </if>
      <if test="userOrigin != null">
        USER_ORIGIN,
      </if>
      <if test="selfIntroduction != null">
        self_introduction,
      </if>
      <if test="shopLogo != null">
        shop_logo,
      </if>
      <if test="shopBanner != null">
        shop_banner,
      </if>
      <if test="wxQrCode != null">
        wx_qr_code,
      </if>
      <if test="regType != null">
        REG_TYPE,
      </if>
      <if test="wechatName != null">
        WECHAT_NAME,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="isPayed != null">
        is_payed,
      </if>
      <if test="practiceSuperStoreBeTime != null">
        practice_super_store_be_time,
      </if>
      <if test="isLoginFirst != null">
        is_login_first,
      </if>
      <if test="isTempStoreCustomer != null">
        is_temp_store_customer,
      </if>
      <if test="isTempSuperCustomer != null">
        is_temp_super_customer,
      </if>
      <if test="superStoreBeTime != null">
        super_store_be_time,
      </if>
      <if test="loginFirstDataTime != null">
        login_first_data_time,
      </if>
      <if test="isDownStore != null">
        is_down_store,
      </if>
      <if test="firstLoginAppDate != null">
        first_login_app_date,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="street != null">
        STREET,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdated != null">
        #{dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="challengeAnswer != null">
        #{challengeAnswer,jdbcType=VARCHAR},
      </if>
      <if test="deactivated != null">
        #{deactivated,jdbcType=BOOLEAN},
      </if>
      <if test="emailAddress != null">
        #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordChangeRequired != null">
        #{passwordChangeRequired,jdbcType=BOOLEAN},
      </if>
      <if test="receiveEmail != null">
        #{receiveEmail,jdbcType=BOOLEAN},
      </if>
      <if test="isRegistered != null">
        #{isRegistered,jdbcType=BOOLEAN},
      </if>
      <if test="taxExemptionCode != null">
        #{taxExemptionCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="challengeQuestionId != null">
        #{challengeQuestionId,jdbcType=BIGINT},
      </if>
      <if test="localeCode != null">
        #{localeCode,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=SMALLINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthDay != null">
        #{birthDay,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="customerAddressId != null">
        #{customerAddressId,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="totalConsume != null">
        #{totalConsume,jdbcType=DECIMAL},
      </if>
      <if test="lastLoginDatetime != null">
        #{lastLoginDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="registerPlatform != null">
        #{registerPlatform,jdbcType=VARCHAR},
      </if>
      <if test="userCardNo != null">
        #{userCardNo,jdbcType=VARCHAR},
      </if>
      <if test="userLevelId != null">
        #{userLevelId,jdbcType=BIGINT},
      </if>
      <if test="point != null">
        #{point,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="encryptionBalance != null">
        #{encryptionBalance,jdbcType=VARCHAR},
      </if>
      <if test="paymentPassword != null">
        #{paymentPassword,jdbcType=VARCHAR},
      </if>
      <if test="consumeCount != null">
        #{consumeCount,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=REAL},
      </if>
      <if test="rebate != null">
        #{rebate,jdbcType=REAL},
      </if>
      <if test="higherCustomerId != null">
        #{higherCustomerId,jdbcType=BIGINT},
      </if>
      <if test="lastReadNoticeTime != null">
        #{lastReadNoticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifiedEmail != null">
        #{verifiedEmail,jdbcType=VARCHAR},
      </if>
      <if test="offerId != null">
        #{offerId,jdbcType=BIGINT},
      </if>
      <if test="isPopularize != null">
        #{isPopularize,jdbcType=CHAR},
      </if>
      <if test="shoppingBag != null">
        #{shoppingBag,jdbcType=INTEGER},
      </if>
      <if test="popularizeDate != null">
        #{popularizeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="distributionLevel != null">
        #{distributionLevel,jdbcType=INTEGER},
      </if>
      <if test="uncheckBalance != null">
        #{uncheckBalance,jdbcType=DECIMAL},
      </if>
      <if test="encryptionUncheckBalance != null">
        #{encryptionUncheckBalance,jdbcType=VARCHAR},
      </if>
      <if test="rebateBalance != null">
        #{rebateBalance,jdbcType=DECIMAL},
      </if>
      <if test="encryptionRebateBalance != null">
        #{encryptionRebateBalance,jdbcType=VARCHAR},
      </if>
      <if test="popularizeResult != null">
        #{popularizeResult,jdbcType=VARCHAR},
      </if>
      <if test="shopQrCode != null">
        #{shopQrCode,jdbcType=VARCHAR},
      </if>
      <if test="isUpdate != null">
        #{isUpdate,jdbcType=CHAR},
      </if>
      <if test="isUpdatePassword != null">
        #{isUpdatePassword,jdbcType=CHAR},
      </if>
      <if test="updatePasswordDate != null">
        #{updatePasswordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shopRegisterQrCode != null">
        #{shopRegisterQrCode,jdbcType=VARCHAR},
      </if>
      <if test="masterLevel != null">
        #{masterLevel,jdbcType=INTEGER},
      </if>
      <if test="appToken != null">
        #{appToken,jdbcType=VARCHAR},
      </if>
      <if test="cardBackImg != null">
        #{cardBackImg,jdbcType=VARCHAR},
      </if>
      <if test="cardFaceImg != null">
        #{cardFaceImg,jdbcType=VARCHAR},
      </if>
      <if test="invitecode != null">
        #{invitecode,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="realStatus != null">
        #{realStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevelNewId != null">
        #{userLevelNewId,jdbcType=VARCHAR},
      </if>
      <if test="virtualCoin != null">
        #{virtualCoin,jdbcType=DECIMAL},
      </if>
      <if test="offerCoupon != null">
        #{offerCoupon,jdbcType=INTEGER},
      </if>
      <if test="levelPoint != null">
        #{levelPoint,jdbcType=BIGINT},
      </if>
      <if test="levelPointTemp != null">
        #{levelPointTemp,jdbcType=BIGINT},
      </if>
      <if test="userLevelNewIdTemp != null">
        #{userLevelNewIdTemp,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="shopStoreId != null">
        #{shopStoreId,jdbcType=BIGINT},
      </if>
      <if test="userOrigin != null">
        #{userOrigin,jdbcType=INTEGER},
      </if>
      <if test="selfIntroduction != null">
        #{selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="shopLogo != null">
        #{shopLogo,jdbcType=VARCHAR},
      </if>
      <if test="shopBanner != null">
        #{shopBanner,jdbcType=VARCHAR},
      </if>
      <if test="wxQrCode != null">
        #{wxQrCode,jdbcType=VARCHAR},
      </if>
      <if test="regType != null">
        #{regType,jdbcType=TINYINT},
      </if>
      <if test="wechatName != null">
        #{wechatName,jdbcType=VARCHAR},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=BIGINT},
      </if>
      <if test="isPayed != null">
        #{isPayed,jdbcType=BOOLEAN},
      </if>
      <if test="practiceSuperStoreBeTime != null">
        #{practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLoginFirst != null">
        #{isLoginFirst,jdbcType=BOOLEAN},
      </if>
      <if test="isTempStoreCustomer != null">
        #{isTempStoreCustomer,jdbcType=INTEGER},
      </if>
      <if test="isTempSuperCustomer != null">
        #{isTempSuperCustomer,jdbcType=BOOLEAN},
      </if>
      <if test="superStoreBeTime != null">
        #{superStoreBeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFirstDataTime != null">
        #{loginFirstDataTime,jdbcType=DATE},
      </if>
      <if test="isDownStore != null">
        #{isDownStore,jdbcType=BOOLEAN},
      </if>
      <if test="firstLoginAppDate != null">
        #{firstLoginAppDate,jdbcType=TIMESTAMP},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        #{street,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomerExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from blc_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blc_customer
    <set>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.dateCreated != null">
        DATE_CREATED = #{record.dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dateUpdated != null">
        DATE_UPDATED = #{record.dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        UPDATED_BY = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.challengeAnswer != null">
        CHALLENGE_ANSWER = #{record.challengeAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.deactivated != null">
        DEACTIVATED = #{record.deactivated,jdbcType=BOOLEAN},
      </if>
      <if test="record.emailAddress != null">
        EMAIL_ADDRESS = #{record.emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.firstName != null">
        FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null">
        LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordChangeRequired != null">
        PASSWORD_CHANGE_REQUIRED = #{record.passwordChangeRequired,jdbcType=BOOLEAN},
      </if>
      <if test="record.receiveEmail != null">
        RECEIVE_EMAIL = #{record.receiveEmail,jdbcType=BOOLEAN},
      </if>
      <if test="record.isRegistered != null">
        IS_REGISTERED = #{record.isRegistered,jdbcType=BOOLEAN},
      </if>
      <if test="record.taxExemptionCode != null">
        TAX_EXEMPTION_CODE = #{record.taxExemptionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.challengeQuestionId != null">
        CHALLENGE_QUESTION_ID = #{record.challengeQuestionId,jdbcType=BIGINT},
      </if>
      <if test="record.localeCode != null">
        LOCALE_CODE = #{record.localeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=SMALLINT},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDay != null">
        BIRTH_DAY = #{record.birthDay,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        COUNTRY = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        PROVINCE = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        CITY = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.imageUrl != null">
        IMAGE_URL = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAddressId != null">
        CUSTOMER_ADDRESS_ID = #{record.customerAddressId,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        SOURCE = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.totalConsume != null">
        TOTAL_CONSUME = #{record.totalConsume,jdbcType=DECIMAL},
      </if>
      <if test="record.lastLoginDatetime != null">
        LAST_LOGIN_DATETIME = #{record.lastLoginDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null">
        LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.registerPlatform != null">
        REGISTER_PLATFORM = #{record.registerPlatform,jdbcType=VARCHAR},
      </if>
      <if test="record.userCardNo != null">
        user_card_no = #{record.userCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userLevelId != null">
        user_level_id = #{record.userLevelId,jdbcType=BIGINT},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.encryptionBalance != null">
        encryption_balance = #{record.encryptionBalance,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentPassword != null">
        payment_password = #{record.paymentPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeCount != null">
        CONSUME_COUNT = #{record.consumeCount,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        DISCOUNT = #{record.discount,jdbcType=REAL},
      </if>
      <if test="record.rebate != null">
        REBATE = #{record.rebate,jdbcType=REAL},
      </if>
      <if test="record.higherCustomerId != null">
        HIGHER_CUSTOMER_ID = #{record.higherCustomerId,jdbcType=BIGINT},
      </if>
      <if test="record.lastReadNoticeTime != null">
        LAST_READ_NOTICE_TIME = #{record.lastReadNoticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verifiedEmail != null">
        VERIFIED_EMAIL = #{record.verifiedEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.offerId != null">
        OFFER_ID = #{record.offerId,jdbcType=BIGINT},
      </if>
      <if test="record.isPopularize != null">
        IS_POPULARIZE = #{record.isPopularize,jdbcType=CHAR},
      </if>
      <if test="record.shoppingBag != null">
        SHOPPING_BAG = #{record.shoppingBag,jdbcType=INTEGER},
      </if>
      <if test="record.popularizeDate != null">
        POPULARIZE_DATE = #{record.popularizeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.distributionLevel != null">
        DISTRIBUTION_LEVEL = #{record.distributionLevel,jdbcType=INTEGER},
      </if>
      <if test="record.uncheckBalance != null">
        uncheck_balance = #{record.uncheckBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.encryptionUncheckBalance != null">
        encryption_uncheck_balance = #{record.encryptionUncheckBalance,jdbcType=VARCHAR},
      </if>
      <if test="record.rebateBalance != null">
        rebate_balance = #{record.rebateBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.encryptionRebateBalance != null">
        encryption_rebate_balance = #{record.encryptionRebateBalance,jdbcType=VARCHAR},
      </if>
      <if test="record.popularizeResult != null">
        POPULARIZE_RESULT = #{record.popularizeResult,jdbcType=VARCHAR},
      </if>
      <if test="record.shopQrCode != null">
        SHOP_QR_CODE = #{record.shopQrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isUpdate != null">
        is_update = #{record.isUpdate,jdbcType=CHAR},
      </if>
      <if test="record.isUpdatePassword != null">
        IS_UPDATE_PASSWORD = #{record.isUpdatePassword,jdbcType=CHAR},
      </if>
      <if test="record.updatePasswordDate != null">
        UPDATE_PASSWORD_DATE = #{record.updatePasswordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopRegisterQrCode != null">
        SHOP_REGISTER_QR_CODE = #{record.shopRegisterQrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.masterLevel != null">
        master_level = #{record.masterLevel,jdbcType=INTEGER},
      </if>
      <if test="record.appToken != null">
        app_token = #{record.appToken,jdbcType=VARCHAR},
      </if>
      <if test="record.cardBackImg != null">
        CARD_BACK_IMG = #{record.cardBackImg,jdbcType=VARCHAR},
      </if>
      <if test="record.cardFaceImg != null">
        CARD_FACE_IMG = #{record.cardFaceImg,jdbcType=VARCHAR},
      </if>
      <if test="record.invitecode != null">
        inviteCode = #{record.invitecode,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        REGION = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        SHOP_ID = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.realStatus != null">
        REAL_STATUS = #{record.realStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userLevelNewId != null">
        user_level_new_id = #{record.userLevelNewId,jdbcType=VARCHAR},
      </if>
      <if test="record.virtualCoin != null">
        VIRTUAL_COIN = #{record.virtualCoin,jdbcType=DECIMAL},
      </if>
      <if test="record.offerCoupon != null">
        OFFER_COUPON = #{record.offerCoupon,jdbcType=INTEGER},
      </if>
      <if test="record.levelPoint != null">
        level_point = #{record.levelPoint,jdbcType=BIGINT},
      </if>
      <if test="record.levelPointTemp != null">
        level_point_temp = #{record.levelPointTemp,jdbcType=BIGINT},
      </if>
      <if test="record.userLevelNewIdTemp != null">
        user_level_new_id_temp = #{record.userLevelNewIdTemp,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.shopStoreId != null">
        shop_store_id = #{record.shopStoreId,jdbcType=BIGINT},
      </if>
      <if test="record.userOrigin != null">
        USER_ORIGIN = #{record.userOrigin,jdbcType=INTEGER},
      </if>
      <if test="record.selfIntroduction != null">
        self_introduction = #{record.selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.shopLogo != null">
        shop_logo = #{record.shopLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.shopBanner != null">
        shop_banner = #{record.shopBanner,jdbcType=VARCHAR},
      </if>
      <if test="record.wxQrCode != null">
        wx_qr_code = #{record.wxQrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regType != null">
        REG_TYPE = #{record.regType,jdbcType=TINYINT},
      </if>
      <if test="record.wechatName != null">
        WECHAT_NAME = #{record.wechatName,jdbcType=VARCHAR},
      </if>
      <if test="record.effectiveTime != null">
        effective_time = #{record.effectiveTime,jdbcType=BIGINT},
      </if>
      <if test="record.isPayed != null">
        is_payed = #{record.isPayed,jdbcType=BOOLEAN},
      </if>
      <if test="record.practiceSuperStoreBeTime != null">
        practice_super_store_be_time = #{record.practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isLoginFirst != null">
        is_login_first = #{record.isLoginFirst,jdbcType=BOOLEAN},
      </if>
      <if test="record.isTempStoreCustomer != null">
        is_temp_store_customer = #{record.isTempStoreCustomer,jdbcType=INTEGER},
      </if>
      <if test="record.isTempSuperCustomer != null">
        is_temp_super_customer = #{record.isTempSuperCustomer,jdbcType=BOOLEAN},
      </if>
      <if test="record.superStoreBeTime != null">
        super_store_be_time = #{record.superStoreBeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginFirstDataTime != null">
        login_first_data_time = #{record.loginFirstDataTime,jdbcType=DATE},
      </if>
      <if test="record.isDownStore != null">
        is_down_store = #{record.isDownStore,jdbcType=BOOLEAN},
      </if>
      <if test="record.firstLoginAppDate != null">
        first_login_app_date = #{record.firstLoginAppDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.street != null">
        STREET = #{record.street,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blc_customer
    set CUSTOMER_ID = #{record.customerId,jdbcType=BIGINT},
      CREATED_BY = #{record.createdBy,jdbcType=BIGINT},
      DATE_CREATED = #{record.dateCreated,jdbcType=TIMESTAMP},
      DATE_UPDATED = #{record.dateUpdated,jdbcType=TIMESTAMP},
      UPDATED_BY = #{record.updatedBy,jdbcType=BIGINT},
      CHALLENGE_ANSWER = #{record.challengeAnswer,jdbcType=VARCHAR},
      DEACTIVATED = #{record.deactivated,jdbcType=BOOLEAN},
      EMAIL_ADDRESS = #{record.emailAddress,jdbcType=VARCHAR},
      FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      PASSWORD_CHANGE_REQUIRED = #{record.passwordChangeRequired,jdbcType=BOOLEAN},
      RECEIVE_EMAIL = #{record.receiveEmail,jdbcType=BOOLEAN},
      IS_REGISTERED = #{record.isRegistered,jdbcType=BOOLEAN},
      TAX_EXEMPTION_CODE = #{record.taxExemptionCode,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      CHALLENGE_QUESTION_ID = #{record.challengeQuestionId,jdbcType=BIGINT},
      LOCALE_CODE = #{record.localeCode,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=SMALLINT},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      BIRTH_DAY = #{record.birthDay,jdbcType=VARCHAR},
      REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
      COUNTRY = #{record.country,jdbcType=VARCHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      IMAGE_URL = #{record.imageUrl,jdbcType=VARCHAR},
      CUSTOMER_ADDRESS_ID = #{record.customerAddressId,jdbcType=VARCHAR},
      SOURCE = #{record.source,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      TOTAL_CONSUME = #{record.totalConsume,jdbcType=DECIMAL},
      LAST_LOGIN_DATETIME = #{record.lastLoginDatetime,jdbcType=TIMESTAMP},
      LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      REGISTER_PLATFORM = #{record.registerPlatform,jdbcType=VARCHAR},
      user_card_no = #{record.userCardNo,jdbcType=VARCHAR},
      user_level_id = #{record.userLevelId,jdbcType=BIGINT},
      point = #{record.point,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=DECIMAL},
      encryption_balance = #{record.encryptionBalance,jdbcType=VARCHAR},
      payment_password = #{record.paymentPassword,jdbcType=VARCHAR},
      CONSUME_COUNT = #{record.consumeCount,jdbcType=INTEGER},
      DISCOUNT = #{record.discount,jdbcType=REAL},
      REBATE = #{record.rebate,jdbcType=REAL},
      HIGHER_CUSTOMER_ID = #{record.higherCustomerId,jdbcType=BIGINT},
      LAST_READ_NOTICE_TIME = #{record.lastReadNoticeTime,jdbcType=TIMESTAMP},
      VERIFIED_EMAIL = #{record.verifiedEmail,jdbcType=VARCHAR},
      OFFER_ID = #{record.offerId,jdbcType=BIGINT},
      IS_POPULARIZE = #{record.isPopularize,jdbcType=CHAR},
      SHOPPING_BAG = #{record.shoppingBag,jdbcType=INTEGER},
      POPULARIZE_DATE = #{record.popularizeDate,jdbcType=TIMESTAMP},
      DISTRIBUTION_LEVEL = #{record.distributionLevel,jdbcType=INTEGER},
      uncheck_balance = #{record.uncheckBalance,jdbcType=DECIMAL},
      encryption_uncheck_balance = #{record.encryptionUncheckBalance,jdbcType=VARCHAR},
      rebate_balance = #{record.rebateBalance,jdbcType=DECIMAL},
      encryption_rebate_balance = #{record.encryptionRebateBalance,jdbcType=VARCHAR},
      POPULARIZE_RESULT = #{record.popularizeResult,jdbcType=VARCHAR},
      SHOP_QR_CODE = #{record.shopQrCode,jdbcType=VARCHAR},
      is_update = #{record.isUpdate,jdbcType=CHAR},
      IS_UPDATE_PASSWORD = #{record.isUpdatePassword,jdbcType=CHAR},
      UPDATE_PASSWORD_DATE = #{record.updatePasswordDate,jdbcType=TIMESTAMP},
      SHOP_REGISTER_QR_CODE = #{record.shopRegisterQrCode,jdbcType=VARCHAR},
      master_level = #{record.masterLevel,jdbcType=INTEGER},
      app_token = #{record.appToken,jdbcType=VARCHAR},
      CARD_BACK_IMG = #{record.cardBackImg,jdbcType=VARCHAR},
      CARD_FACE_IMG = #{record.cardFaceImg,jdbcType=VARCHAR},
      inviteCode = #{record.invitecode,jdbcType=VARCHAR},
      REGION = #{record.region,jdbcType=VARCHAR},
      SHOP_ID = #{record.shopId,jdbcType=BIGINT},
      REAL_STATUS = #{record.realStatus,jdbcType=INTEGER},
      user_level_new_id = #{record.userLevelNewId,jdbcType=VARCHAR},
      VIRTUAL_COIN = #{record.virtualCoin,jdbcType=DECIMAL},
      OFFER_COUPON = #{record.offerCoupon,jdbcType=INTEGER},
      level_point = #{record.levelPoint,jdbcType=BIGINT},
      level_point_temp = #{record.levelPointTemp,jdbcType=BIGINT},
      user_level_new_id_temp = #{record.userLevelNewIdTemp,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=VARCHAR},
      shop_store_id = #{record.shopStoreId,jdbcType=BIGINT},
      USER_ORIGIN = #{record.userOrigin,jdbcType=INTEGER},
      self_introduction = #{record.selfIntroduction,jdbcType=VARCHAR},
      shop_logo = #{record.shopLogo,jdbcType=VARCHAR},
      shop_banner = #{record.shopBanner,jdbcType=VARCHAR},
      wx_qr_code = #{record.wxQrCode,jdbcType=VARCHAR},
      REG_TYPE = #{record.regType,jdbcType=TINYINT},
      WECHAT_NAME = #{record.wechatName,jdbcType=VARCHAR},
      effective_time = #{record.effectiveTime,jdbcType=BIGINT},
      is_payed = #{record.isPayed,jdbcType=BOOLEAN},
      practice_super_store_be_time = #{record.practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      is_login_first = #{record.isLoginFirst,jdbcType=BOOLEAN},
      is_temp_store_customer = #{record.isTempStoreCustomer,jdbcType=INTEGER},
      is_temp_super_customer = #{record.isTempSuperCustomer,jdbcType=BOOLEAN},
      super_store_be_time = #{record.superStoreBeTime,jdbcType=TIMESTAMP},
      login_first_data_time = #{record.loginFirstDataTime,jdbcType=DATE},
      is_down_store = #{record.isDownStore,jdbcType=BOOLEAN},
      first_login_app_date = #{record.firstLoginAppDate,jdbcType=TIMESTAMP},
      position = #{record.position,jdbcType=VARCHAR},
      STREET = #{record.street,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blc_customer
    set CUSTOMER_ID = #{record.customerId,jdbcType=BIGINT},
      CREATED_BY = #{record.createdBy,jdbcType=BIGINT},
      DATE_CREATED = #{record.dateCreated,jdbcType=TIMESTAMP},
      DATE_UPDATED = #{record.dateUpdated,jdbcType=TIMESTAMP},
      UPDATED_BY = #{record.updatedBy,jdbcType=BIGINT},
      CHALLENGE_ANSWER = #{record.challengeAnswer,jdbcType=VARCHAR},
      DEACTIVATED = #{record.deactivated,jdbcType=BOOLEAN},
      EMAIL_ADDRESS = #{record.emailAddress,jdbcType=VARCHAR},
      FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      PASSWORD_CHANGE_REQUIRED = #{record.passwordChangeRequired,jdbcType=BOOLEAN},
      RECEIVE_EMAIL = #{record.receiveEmail,jdbcType=BOOLEAN},
      IS_REGISTERED = #{record.isRegistered,jdbcType=BOOLEAN},
      TAX_EXEMPTION_CODE = #{record.taxExemptionCode,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      CHALLENGE_QUESTION_ID = #{record.challengeQuestionId,jdbcType=BIGINT},
      LOCALE_CODE = #{record.localeCode,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=SMALLINT},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      BIRTH_DAY = #{record.birthDay,jdbcType=VARCHAR},
      REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      CARD_NO = #{record.cardNo,jdbcType=VARCHAR},
      COUNTRY = #{record.country,jdbcType=VARCHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      IMAGE_URL = #{record.imageUrl,jdbcType=VARCHAR},
      CUSTOMER_ADDRESS_ID = #{record.customerAddressId,jdbcType=VARCHAR},
      SOURCE = #{record.source,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      TOTAL_CONSUME = #{record.totalConsume,jdbcType=DECIMAL},
      LAST_LOGIN_DATETIME = #{record.lastLoginDatetime,jdbcType=TIMESTAMP},
      LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      REGISTER_PLATFORM = #{record.registerPlatform,jdbcType=VARCHAR},
      user_card_no = #{record.userCardNo,jdbcType=VARCHAR},
      user_level_id = #{record.userLevelId,jdbcType=BIGINT},
      point = #{record.point,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=DECIMAL},
      encryption_balance = #{record.encryptionBalance,jdbcType=VARCHAR},
      payment_password = #{record.paymentPassword,jdbcType=VARCHAR},
      CONSUME_COUNT = #{record.consumeCount,jdbcType=INTEGER},
      DISCOUNT = #{record.discount,jdbcType=REAL},
      REBATE = #{record.rebate,jdbcType=REAL},
      HIGHER_CUSTOMER_ID = #{record.higherCustomerId,jdbcType=BIGINT},
      LAST_READ_NOTICE_TIME = #{record.lastReadNoticeTime,jdbcType=TIMESTAMP},
      VERIFIED_EMAIL = #{record.verifiedEmail,jdbcType=VARCHAR},
      OFFER_ID = #{record.offerId,jdbcType=BIGINT},
      IS_POPULARIZE = #{record.isPopularize,jdbcType=CHAR},
      SHOPPING_BAG = #{record.shoppingBag,jdbcType=INTEGER},
      POPULARIZE_DATE = #{record.popularizeDate,jdbcType=TIMESTAMP},
      DISTRIBUTION_LEVEL = #{record.distributionLevel,jdbcType=INTEGER},
      uncheck_balance = #{record.uncheckBalance,jdbcType=DECIMAL},
      encryption_uncheck_balance = #{record.encryptionUncheckBalance,jdbcType=VARCHAR},
      rebate_balance = #{record.rebateBalance,jdbcType=DECIMAL},
      encryption_rebate_balance = #{record.encryptionRebateBalance,jdbcType=VARCHAR},
      POPULARIZE_RESULT = #{record.popularizeResult,jdbcType=VARCHAR},
      SHOP_QR_CODE = #{record.shopQrCode,jdbcType=VARCHAR},
      is_update = #{record.isUpdate,jdbcType=CHAR},
      IS_UPDATE_PASSWORD = #{record.isUpdatePassword,jdbcType=CHAR},
      UPDATE_PASSWORD_DATE = #{record.updatePasswordDate,jdbcType=TIMESTAMP},
      SHOP_REGISTER_QR_CODE = #{record.shopRegisterQrCode,jdbcType=VARCHAR},
      master_level = #{record.masterLevel,jdbcType=INTEGER},
      app_token = #{record.appToken,jdbcType=VARCHAR},
      CARD_BACK_IMG = #{record.cardBackImg,jdbcType=VARCHAR},
      CARD_FACE_IMG = #{record.cardFaceImg,jdbcType=VARCHAR},
      inviteCode = #{record.invitecode,jdbcType=VARCHAR},
      REGION = #{record.region,jdbcType=VARCHAR},
      SHOP_ID = #{record.shopId,jdbcType=BIGINT},
      REAL_STATUS = #{record.realStatus,jdbcType=INTEGER},
      user_level_new_id = #{record.userLevelNewId,jdbcType=VARCHAR},
      VIRTUAL_COIN = #{record.virtualCoin,jdbcType=DECIMAL},
      OFFER_COUPON = #{record.offerCoupon,jdbcType=INTEGER},
      level_point = #{record.levelPoint,jdbcType=BIGINT},
      level_point_temp = #{record.levelPointTemp,jdbcType=BIGINT},
      user_level_new_id_temp = #{record.userLevelNewIdTemp,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=VARCHAR},
      shop_store_id = #{record.shopStoreId,jdbcType=BIGINT},
      USER_ORIGIN = #{record.userOrigin,jdbcType=INTEGER},
      self_introduction = #{record.selfIntroduction,jdbcType=VARCHAR},
      shop_logo = #{record.shopLogo,jdbcType=VARCHAR},
      shop_banner = #{record.shopBanner,jdbcType=VARCHAR},
      wx_qr_code = #{record.wxQrCode,jdbcType=VARCHAR},
      REG_TYPE = #{record.regType,jdbcType=TINYINT},
      WECHAT_NAME = #{record.wechatName,jdbcType=VARCHAR},
      effective_time = #{record.effectiveTime,jdbcType=BIGINT},
      is_payed = #{record.isPayed,jdbcType=BOOLEAN},
      practice_super_store_be_time = #{record.practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      is_login_first = #{record.isLoginFirst,jdbcType=BOOLEAN},
      is_temp_store_customer = #{record.isTempStoreCustomer,jdbcType=INTEGER},
      is_temp_super_customer = #{record.isTempSuperCustomer,jdbcType=BOOLEAN},
      super_store_be_time = #{record.superStoreBeTime,jdbcType=TIMESTAMP},
      login_first_data_time = #{record.loginFirstDataTime,jdbcType=DATE},
      is_down_store = #{record.isDownStore,jdbcType=BOOLEAN},
      first_login_app_date = #{record.firstLoginAppDate,jdbcType=TIMESTAMP},
      position = #{record.position,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blc_customer
    <set>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        DATE_CREATED = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dateUpdated != null">
        DATE_UPDATED = #{dateUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="challengeAnswer != null">
        CHALLENGE_ANSWER = #{challengeAnswer,jdbcType=VARCHAR},
      </if>
      <if test="deactivated != null">
        DEACTIVATED = #{deactivated,jdbcType=BOOLEAN},
      </if>
      <if test="emailAddress != null">
        EMAIL_ADDRESS = #{emailAddress,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        LAST_NAME = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordChangeRequired != null">
        PASSWORD_CHANGE_REQUIRED = #{passwordChangeRequired,jdbcType=BOOLEAN},
      </if>
      <if test="receiveEmail != null">
        RECEIVE_EMAIL = #{receiveEmail,jdbcType=BOOLEAN},
      </if>
      <if test="isRegistered != null">
        IS_REGISTERED = #{isRegistered,jdbcType=BOOLEAN},
      </if>
      <if test="taxExemptionCode != null">
        TAX_EXEMPTION_CODE = #{taxExemptionCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="challengeQuestionId != null">
        CHALLENGE_QUESTION_ID = #{challengeQuestionId,jdbcType=BIGINT},
      </if>
      <if test="localeCode != null">
        LOCALE_CODE = #{localeCode,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=SMALLINT},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthDay != null">
        BIRTH_DAY = #{birthDay,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        CARD_NO = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        COUNTRY = #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        PROVINCE = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        IMAGE_URL = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="customerAddressId != null">
        CUSTOMER_ADDRESS_ID = #{customerAddressId,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        SOURCE = #{source,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="totalConsume != null">
        TOTAL_CONSUME = #{totalConsume,jdbcType=DECIMAL},
      </if>
      <if test="lastLoginDatetime != null">
        LAST_LOGIN_DATETIME = #{lastLoginDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="registerPlatform != null">
        REGISTER_PLATFORM = #{registerPlatform,jdbcType=VARCHAR},
      </if>
      <if test="userCardNo != null">
        user_card_no = #{userCardNo,jdbcType=VARCHAR},
      </if>
      <if test="userLevelId != null">
        user_level_id = #{userLevelId,jdbcType=BIGINT},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="encryptionBalance != null">
        encryption_balance = #{encryptionBalance,jdbcType=VARCHAR},
      </if>
      <if test="paymentPassword != null">
        payment_password = #{paymentPassword,jdbcType=VARCHAR},
      </if>
      <if test="consumeCount != null">
        CONSUME_COUNT = #{consumeCount,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        DISCOUNT = #{discount,jdbcType=REAL},
      </if>
      <if test="rebate != null">
        REBATE = #{rebate,jdbcType=REAL},
      </if>
      <if test="higherCustomerId != null">
        HIGHER_CUSTOMER_ID = #{higherCustomerId,jdbcType=BIGINT},
      </if>
      <if test="lastReadNoticeTime != null">
        LAST_READ_NOTICE_TIME = #{lastReadNoticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifiedEmail != null">
        VERIFIED_EMAIL = #{verifiedEmail,jdbcType=VARCHAR},
      </if>
      <if test="offerId != null">
        OFFER_ID = #{offerId,jdbcType=BIGINT},
      </if>
      <if test="isPopularize != null">
        IS_POPULARIZE = #{isPopularize,jdbcType=CHAR},
      </if>
      <if test="shoppingBag != null">
        SHOPPING_BAG = #{shoppingBag,jdbcType=INTEGER},
      </if>
      <if test="popularizeDate != null">
        POPULARIZE_DATE = #{popularizeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="distributionLevel != null">
        DISTRIBUTION_LEVEL = #{distributionLevel,jdbcType=INTEGER},
      </if>
      <if test="uncheckBalance != null">
        uncheck_balance = #{uncheckBalance,jdbcType=DECIMAL},
      </if>
      <if test="encryptionUncheckBalance != null">
        encryption_uncheck_balance = #{encryptionUncheckBalance,jdbcType=VARCHAR},
      </if>
      <if test="rebateBalance != null">
        rebate_balance = #{rebateBalance,jdbcType=DECIMAL},
      </if>
      <if test="encryptionRebateBalance != null">
        encryption_rebate_balance = #{encryptionRebateBalance,jdbcType=VARCHAR},
      </if>
      <if test="popularizeResult != null">
        POPULARIZE_RESULT = #{popularizeResult,jdbcType=VARCHAR},
      </if>
      <if test="shopQrCode != null">
        SHOP_QR_CODE = #{shopQrCode,jdbcType=VARCHAR},
      </if>
      <if test="isUpdate != null">
        is_update = #{isUpdate,jdbcType=CHAR},
      </if>
      <if test="isUpdatePassword != null">
        IS_UPDATE_PASSWORD = #{isUpdatePassword,jdbcType=CHAR},
      </if>
      <if test="updatePasswordDate != null">
        UPDATE_PASSWORD_DATE = #{updatePasswordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shopRegisterQrCode != null">
        SHOP_REGISTER_QR_CODE = #{shopRegisterQrCode,jdbcType=VARCHAR},
      </if>
      <if test="masterLevel != null">
        master_level = #{masterLevel,jdbcType=INTEGER},
      </if>
      <if test="appToken != null">
        app_token = #{appToken,jdbcType=VARCHAR},
      </if>
      <if test="cardBackImg != null">
        CARD_BACK_IMG = #{cardBackImg,jdbcType=VARCHAR},
      </if>
      <if test="cardFaceImg != null">
        CARD_FACE_IMG = #{cardFaceImg,jdbcType=VARCHAR},
      </if>
      <if test="invitecode != null">
        inviteCode = #{invitecode,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        REGION = #{region,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        SHOP_ID = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="realStatus != null">
        REAL_STATUS = #{realStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevelNewId != null">
        user_level_new_id = #{userLevelNewId,jdbcType=VARCHAR},
      </if>
      <if test="virtualCoin != null">
        VIRTUAL_COIN = #{virtualCoin,jdbcType=DECIMAL},
      </if>
      <if test="offerCoupon != null">
        OFFER_COUPON = #{offerCoupon,jdbcType=INTEGER},
      </if>
      <if test="levelPoint != null">
        level_point = #{levelPoint,jdbcType=BIGINT},
      </if>
      <if test="levelPointTemp != null">
        level_point_temp = #{levelPointTemp,jdbcType=BIGINT},
      </if>
      <if test="userLevelNewIdTemp != null">
        user_level_new_id_temp = #{userLevelNewIdTemp,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="shopStoreId != null">
        shop_store_id = #{shopStoreId,jdbcType=BIGINT},
      </if>
      <if test="userOrigin != null">
        USER_ORIGIN = #{userOrigin,jdbcType=INTEGER},
      </if>
      <if test="selfIntroduction != null">
        self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="shopLogo != null">
        shop_logo = #{shopLogo,jdbcType=VARCHAR},
      </if>
      <if test="shopBanner != null">
        shop_banner = #{shopBanner,jdbcType=VARCHAR},
      </if>
      <if test="wxQrCode != null">
        wx_qr_code = #{wxQrCode,jdbcType=VARCHAR},
      </if>
      <if test="regType != null">
        REG_TYPE = #{regType,jdbcType=TINYINT},
      </if>
      <if test="wechatName != null">
        WECHAT_NAME = #{wechatName,jdbcType=VARCHAR},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=BIGINT},
      </if>
      <if test="isPayed != null">
        is_payed = #{isPayed,jdbcType=BOOLEAN},
      </if>
      <if test="practiceSuperStoreBeTime != null">
        practice_super_store_be_time = #{practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLoginFirst != null">
        is_login_first = #{isLoginFirst,jdbcType=BOOLEAN},
      </if>
      <if test="isTempStoreCustomer != null">
        is_temp_store_customer = #{isTempStoreCustomer,jdbcType=INTEGER},
      </if>
      <if test="isTempSuperCustomer != null">
        is_temp_super_customer = #{isTempSuperCustomer,jdbcType=BOOLEAN},
      </if>
      <if test="superStoreBeTime != null">
        super_store_be_time = #{superStoreBeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFirstDataTime != null">
        login_first_data_time = #{loginFirstDataTime,jdbcType=DATE},
      </if>
      <if test="isDownStore != null">
        is_down_store = #{isDownStore,jdbcType=BOOLEAN},
      </if>
      <if test="firstLoginAppDate != null">
        first_login_app_date = #{firstLoginAppDate,jdbcType=TIMESTAMP},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        STREET = #{street,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where CUSTOMER_ID = #{customerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blc_customer
    set CREATED_BY = #{createdBy,jdbcType=BIGINT},
      DATE_CREATED = #{dateCreated,jdbcType=TIMESTAMP},
      DATE_UPDATED = #{dateUpdated,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
      CHALLENGE_ANSWER = #{challengeAnswer,jdbcType=VARCHAR},
      DEACTIVATED = #{deactivated,jdbcType=BOOLEAN},
      EMAIL_ADDRESS = #{emailAddress,jdbcType=VARCHAR},
      FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PASSWORD_CHANGE_REQUIRED = #{passwordChangeRequired,jdbcType=BOOLEAN},
      RECEIVE_EMAIL = #{receiveEmail,jdbcType=BOOLEAN},
      IS_REGISTERED = #{isRegistered,jdbcType=BOOLEAN},
      TAX_EXEMPTION_CODE = #{taxExemptionCode,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      CHALLENGE_QUESTION_ID = #{challengeQuestionId,jdbcType=BIGINT},
      LOCALE_CODE = #{localeCode,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=SMALLINT},
      PHONE = #{phone,jdbcType=VARCHAR},
      BIRTH_DAY = #{birthDay,jdbcType=VARCHAR},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      CARD_NO = #{cardNo,jdbcType=VARCHAR},
      COUNTRY = #{country,jdbcType=VARCHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CITY = #{city,jdbcType=VARCHAR},
      IMAGE_URL = #{imageUrl,jdbcType=VARCHAR},
      CUSTOMER_ADDRESS_ID = #{customerAddressId,jdbcType=VARCHAR},
      SOURCE = #{source,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      TOTAL_CONSUME = #{totalConsume,jdbcType=DECIMAL},
      LAST_LOGIN_DATETIME = #{lastLoginDatetime,jdbcType=TIMESTAMP},
      LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      REGISTER_PLATFORM = #{registerPlatform,jdbcType=VARCHAR},
      user_card_no = #{userCardNo,jdbcType=VARCHAR},
      user_level_id = #{userLevelId,jdbcType=BIGINT},
      point = #{point,jdbcType=BIGINT},
      balance = #{balance,jdbcType=DECIMAL},
      encryption_balance = #{encryptionBalance,jdbcType=VARCHAR},
      payment_password = #{paymentPassword,jdbcType=VARCHAR},
      CONSUME_COUNT = #{consumeCount,jdbcType=INTEGER},
      DISCOUNT = #{discount,jdbcType=REAL},
      REBATE = #{rebate,jdbcType=REAL},
      HIGHER_CUSTOMER_ID = #{higherCustomerId,jdbcType=BIGINT},
      LAST_READ_NOTICE_TIME = #{lastReadNoticeTime,jdbcType=TIMESTAMP},
      VERIFIED_EMAIL = #{verifiedEmail,jdbcType=VARCHAR},
      OFFER_ID = #{offerId,jdbcType=BIGINT},
      IS_POPULARIZE = #{isPopularize,jdbcType=CHAR},
      SHOPPING_BAG = #{shoppingBag,jdbcType=INTEGER},
      POPULARIZE_DATE = #{popularizeDate,jdbcType=TIMESTAMP},
      DISTRIBUTION_LEVEL = #{distributionLevel,jdbcType=INTEGER},
      uncheck_balance = #{uncheckBalance,jdbcType=DECIMAL},
      encryption_uncheck_balance = #{encryptionUncheckBalance,jdbcType=VARCHAR},
      rebate_balance = #{rebateBalance,jdbcType=DECIMAL},
      encryption_rebate_balance = #{encryptionRebateBalance,jdbcType=VARCHAR},
      POPULARIZE_RESULT = #{popularizeResult,jdbcType=VARCHAR},
      SHOP_QR_CODE = #{shopQrCode,jdbcType=VARCHAR},
      is_update = #{isUpdate,jdbcType=CHAR},
      IS_UPDATE_PASSWORD = #{isUpdatePassword,jdbcType=CHAR},
      UPDATE_PASSWORD_DATE = #{updatePasswordDate,jdbcType=TIMESTAMP},
      SHOP_REGISTER_QR_CODE = #{shopRegisterQrCode,jdbcType=VARCHAR},
      master_level = #{masterLevel,jdbcType=INTEGER},
      app_token = #{appToken,jdbcType=VARCHAR},
      CARD_BACK_IMG = #{cardBackImg,jdbcType=VARCHAR},
      CARD_FACE_IMG = #{cardFaceImg,jdbcType=VARCHAR},
      inviteCode = #{invitecode,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR},
      SHOP_ID = #{shopId,jdbcType=BIGINT},
      REAL_STATUS = #{realStatus,jdbcType=INTEGER},
      user_level_new_id = #{userLevelNewId,jdbcType=VARCHAR},
      VIRTUAL_COIN = #{virtualCoin,jdbcType=DECIMAL},
      OFFER_COUPON = #{offerCoupon,jdbcType=INTEGER},
      level_point = #{levelPoint,jdbcType=BIGINT},
      level_point_temp = #{levelPointTemp,jdbcType=BIGINT},
      user_level_new_id_temp = #{userLevelNewIdTemp,jdbcType=BIGINT},
      user_type = #{userType,jdbcType=VARCHAR},
      shop_store_id = #{shopStoreId,jdbcType=BIGINT},
      USER_ORIGIN = #{userOrigin,jdbcType=INTEGER},
      self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      shop_logo = #{shopLogo,jdbcType=VARCHAR},
      shop_banner = #{shopBanner,jdbcType=VARCHAR},
      wx_qr_code = #{wxQrCode,jdbcType=VARCHAR},
      REG_TYPE = #{regType,jdbcType=TINYINT},
      WECHAT_NAME = #{wechatName,jdbcType=VARCHAR},
      effective_time = #{effectiveTime,jdbcType=BIGINT},
      is_payed = #{isPayed,jdbcType=BOOLEAN},
      practice_super_store_be_time = #{practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      is_login_first = #{isLoginFirst,jdbcType=BOOLEAN},
      is_temp_store_customer = #{isTempStoreCustomer,jdbcType=INTEGER},
      is_temp_super_customer = #{isTempSuperCustomer,jdbcType=BOOLEAN},
      super_store_be_time = #{superStoreBeTime,jdbcType=TIMESTAMP},
      login_first_data_time = #{loginFirstDataTime,jdbcType=DATE},
      is_down_store = #{isDownStore,jdbcType=BOOLEAN},
      first_login_app_date = #{firstLoginAppDate,jdbcType=TIMESTAMP},
      position = #{position,jdbcType=VARCHAR},
      STREET = #{street,jdbcType=LONGVARCHAR}
    where CUSTOMER_ID = #{customerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update blc_customer
    set CREATED_BY = #{createdBy,jdbcType=BIGINT},
      DATE_CREATED = #{dateCreated,jdbcType=TIMESTAMP},
      DATE_UPDATED = #{dateUpdated,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=BIGINT},
      CHALLENGE_ANSWER = #{challengeAnswer,jdbcType=VARCHAR},
      DEACTIVATED = #{deactivated,jdbcType=BOOLEAN},
      EMAIL_ADDRESS = #{emailAddress,jdbcType=VARCHAR},
      FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PASSWORD_CHANGE_REQUIRED = #{passwordChangeRequired,jdbcType=BOOLEAN},
      RECEIVE_EMAIL = #{receiveEmail,jdbcType=BOOLEAN},
      IS_REGISTERED = #{isRegistered,jdbcType=BOOLEAN},
      TAX_EXEMPTION_CODE = #{taxExemptionCode,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      CHALLENGE_QUESTION_ID = #{challengeQuestionId,jdbcType=BIGINT},
      LOCALE_CODE = #{localeCode,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=SMALLINT},
      PHONE = #{phone,jdbcType=VARCHAR},
      BIRTH_DAY = #{birthDay,jdbcType=VARCHAR},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      CARD_NO = #{cardNo,jdbcType=VARCHAR},
      COUNTRY = #{country,jdbcType=VARCHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CITY = #{city,jdbcType=VARCHAR},
      IMAGE_URL = #{imageUrl,jdbcType=VARCHAR},
      CUSTOMER_ADDRESS_ID = #{customerAddressId,jdbcType=VARCHAR},
      SOURCE = #{source,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      TOTAL_CONSUME = #{totalConsume,jdbcType=DECIMAL},
      LAST_LOGIN_DATETIME = #{lastLoginDatetime,jdbcType=TIMESTAMP},
      LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      REGISTER_PLATFORM = #{registerPlatform,jdbcType=VARCHAR},
      user_card_no = #{userCardNo,jdbcType=VARCHAR},
      user_level_id = #{userLevelId,jdbcType=BIGINT},
      point = #{point,jdbcType=BIGINT},
      balance = #{balance,jdbcType=DECIMAL},
      encryption_balance = #{encryptionBalance,jdbcType=VARCHAR},
      payment_password = #{paymentPassword,jdbcType=VARCHAR},
      CONSUME_COUNT = #{consumeCount,jdbcType=INTEGER},
      DISCOUNT = #{discount,jdbcType=REAL},
      REBATE = #{rebate,jdbcType=REAL},
      HIGHER_CUSTOMER_ID = #{higherCustomerId,jdbcType=BIGINT},
      LAST_READ_NOTICE_TIME = #{lastReadNoticeTime,jdbcType=TIMESTAMP},
      VERIFIED_EMAIL = #{verifiedEmail,jdbcType=VARCHAR},
      OFFER_ID = #{offerId,jdbcType=BIGINT},
      IS_POPULARIZE = #{isPopularize,jdbcType=CHAR},
      SHOPPING_BAG = #{shoppingBag,jdbcType=INTEGER},
      POPULARIZE_DATE = #{popularizeDate,jdbcType=TIMESTAMP},
      DISTRIBUTION_LEVEL = #{distributionLevel,jdbcType=INTEGER},
      uncheck_balance = #{uncheckBalance,jdbcType=DECIMAL},
      encryption_uncheck_balance = #{encryptionUncheckBalance,jdbcType=VARCHAR},
      rebate_balance = #{rebateBalance,jdbcType=DECIMAL},
      encryption_rebate_balance = #{encryptionRebateBalance,jdbcType=VARCHAR},
      POPULARIZE_RESULT = #{popularizeResult,jdbcType=VARCHAR},
      SHOP_QR_CODE = #{shopQrCode,jdbcType=VARCHAR},
      is_update = #{isUpdate,jdbcType=CHAR},
      IS_UPDATE_PASSWORD = #{isUpdatePassword,jdbcType=CHAR},
      UPDATE_PASSWORD_DATE = #{updatePasswordDate,jdbcType=TIMESTAMP},
      SHOP_REGISTER_QR_CODE = #{shopRegisterQrCode,jdbcType=VARCHAR},
      master_level = #{masterLevel,jdbcType=INTEGER},
      app_token = #{appToken,jdbcType=VARCHAR},
      CARD_BACK_IMG = #{cardBackImg,jdbcType=VARCHAR},
      CARD_FACE_IMG = #{cardFaceImg,jdbcType=VARCHAR},
      inviteCode = #{invitecode,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR},
      SHOP_ID = #{shopId,jdbcType=BIGINT},
      REAL_STATUS = #{realStatus,jdbcType=INTEGER},
      user_level_new_id = #{userLevelNewId,jdbcType=VARCHAR},
      VIRTUAL_COIN = #{virtualCoin,jdbcType=DECIMAL},
      OFFER_COUPON = #{offerCoupon,jdbcType=INTEGER},
      level_point = #{levelPoint,jdbcType=BIGINT},
      level_point_temp = #{levelPointTemp,jdbcType=BIGINT},
      user_level_new_id_temp = #{userLevelNewIdTemp,jdbcType=BIGINT},
      user_type = #{userType,jdbcType=VARCHAR},
      shop_store_id = #{shopStoreId,jdbcType=BIGINT},
      USER_ORIGIN = #{userOrigin,jdbcType=INTEGER},
      self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      shop_logo = #{shopLogo,jdbcType=VARCHAR},
      shop_banner = #{shopBanner,jdbcType=VARCHAR},
      wx_qr_code = #{wxQrCode,jdbcType=VARCHAR},
      REG_TYPE = #{regType,jdbcType=TINYINT},
      WECHAT_NAME = #{wechatName,jdbcType=VARCHAR},
      effective_time = #{effectiveTime,jdbcType=BIGINT},
      is_payed = #{isPayed,jdbcType=BOOLEAN},
      practice_super_store_be_time = #{practiceSuperStoreBeTime,jdbcType=TIMESTAMP},
      is_login_first = #{isLoginFirst,jdbcType=BOOLEAN},
      is_temp_store_customer = #{isTempStoreCustomer,jdbcType=INTEGER},
      is_temp_super_customer = #{isTempSuperCustomer,jdbcType=BOOLEAN},
      super_store_be_time = #{superStoreBeTime,jdbcType=TIMESTAMP},
      login_first_data_time = #{loginFirstDataTime,jdbcType=DATE},
      is_down_store = #{isDownStore,jdbcType=BOOLEAN},
      first_login_app_date = #{firstLoginAppDate,jdbcType=TIMESTAMP},
      position = #{position,jdbcType=VARCHAR}
    where CUSTOMER_ID = #{customerId,jdbcType=BIGINT}
  </update>

  <select id="countDirectStoreAndManagerNumForManager" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select
    count(case when user_level_new_id = 1 then 1 else null end) as totalDirectStoreNum,
    count(case when user_level_new_id = 4 then 1 else null end) as totalStoreManagerNum
    from blc_customer where HIGHER_CUSTOMER_ID = #{managerId} and user_type = 'STORE'
    <if test="userName != null and userName != ''">
      and REAL_NAME like concat(#{userName},"%")
    </if>
  </select>

  <select id="countMonthDirectStoreAndManagerNumForManager" resultType="java.lang.Integer">
    select
    <if test="countUserType==2">
      count(1) as monthNewDirectStoreNum
    </if>
    <if test="countUserType==3">
      count(1) as monthNewStoreManagerNum
    </if>
    from blc_customer
    where HIGHER_CUSTOMER_ID = #{managerId} and user_type = 'STORE'
      <choose>
        <when test="countUserType==2">
          and DATE_FORMAT(DATE_CREATED,'%Y%m') = #{month} and user_level_new_id = 1
        </when>
        <otherwise>
          and (DATE_FORMAT(super_store_be_time,'%Y%m') = #{month} or DATE_FORMAT(practice_super_store_be_time,'%Y%m') = #{month})
          and user_level_new_id = 4
        </otherwise>
      </choose>
  </select>

  <select id="getIndirectStoreOrVipListForManager" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select c.REAL_NAME as realName, c.phone, c.DATE_CREATED as dateCreated, c.is_temp_store_customer as isTempStoreCustomer
    from blc_customer c, blc_customer_relation r
    where c.CUSTOMER_ID = r.customer_id and r.store_super_mgr_id = #{managerId}
    <if test="userName != null and userName != '' and childType == 3">
      and c.REAL_NAME like concat(#{userName},"%")
    </if>
    <if test="childType == 1">
      and r.customer_type = 3
    </if>
    <if test="childType == 3">
      and r.customer_type = 1 and c.HIGHER_CUSTOMER_ID != #{managerId}
    </if>
    <if test="month != null">
      and DATE_FORMAT(c.DATE_CREATED,'%Y%m') = #{month}
    </if>
    order by c.DATE_CREATED desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="getMonthManagerOrDirectStoreListForManager" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select REAL_NAME as realName, phone, DATE_CREATED as dateCreated, is_temp_store_customer as isTempStoreCustomer
    from blc_customer
    where HIGHER_CUSTOMER_ID = #{managerId}
    <if test="childType==4">
      and user_level_new_id = 4 and user_type = 'STORE'
      and (DATE_FORMAT(super_store_be_time,'%Y%m') = #{month} or DATE_FORMAT(practice_super_store_be_time,'%Y%m') = #{month})
    </if>
    <if test="childType==2">
      and user_level_new_id = 1 and user_type = 'STORE' and DATE_FORMAT(DATE_CREATED,'%Y%m') = #{month}
    </if>
    order by DATE_CREATED desc
    limit #{page.offset}, #{page.limit};
  </select>

  <select id="countTotalNumForDirector" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select
    count(1) as totalNum,
    count(case when user_level_new_id = 4 and user_type = 'STORE' then 1 else null end) as totalStoreManagerNum,
    count(case when user_level_new_id = 1 and user_type = 'STORE' then 1 else null end) as totalStoreNum,
    count(case when user_type = 'VIP' then 1 else null end) as totalVipNum
    from blc_customer
    where shop_store_id = #{directorId}
    <if test="userName != null and userName != ''">
      and REAL_NAME like concat(#{userName},"%")
    </if>
  </select>

  <select id="countMonthManagerNumForDirector" resultType="java.lang.Integer">
    select
    count(1) as monthNewStoreManagerNum
    from blc_customer
    where shop_store_id = #{directorId} and user_level_new_id = 4 and user_type = 'STORE'
    and (DATE_FORMAT(super_store_be_time,'%Y%m') = #{month} or DATE_FORMAT(practice_super_store_be_time,'%Y%m') = #{month})
  </select>

  <select id="countStoreAndVipNumForDirector" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select
    <if test="month != null">
        count(case when user_level_new_id = 1 and user_type = 'STORE' then 1 else null end) as monthNewStoreNum,
        count(case when user_type = 'VIP' then 1 else null end) as monthNewVipNum
    </if>
    <if test="day != null">
        count(case when user_level_new_id = 1 and user_type = 'STORE' then 1 else null end) as dayNewStoreNum,
        count(case when user_type = 'VIP' then 1 else null end) as dayNewVipNum
    </if>
    from blc_customer
    where shop_store_id = #{directorId}
    <if test="month != null">
        and DATE_FORMAT(DATE_CREATED,'%Y%m') = #{month}
    </if>
    <if test="day != null">
        and DATE_FORMAT(DATE_CREATED,'%Y%m%d') = #{day}
    </if>
  </select>

  <select id="getMonthUserChildListForDirector" resultType="com.gialen.tools.dao.entity.gialen.BlcCustomer">
    select customer_id as customerId, phone, REAL_NAME as realName, DATE_CREATED as dateCreated, is_temp_store_customer as isTempStoreCustomer
    from blc_customer
    where shop_store_id = #{directorId}
    <if test="childType==4">
      and user_level_new_id = 4 and user_type = 'STORE'
      and (DATE_FORMAT(super_store_be_time,'%Y%m') = #{month} or DATE_FORMAT(practice_super_store_be_time,'%Y%m') = #{month})
    </if>
    <if test="childType==2 or childType ==3">
      and user_level_new_id = 1 and user_type = 'STORE' and DATE_FORMAT(DATE_CREATED,'%Y%m') = #{month}
    </if>
    <if test="childType==1">
      and user_type = 'VIP' and DATE_FORMAT(DATE_CREATED,'%Y%m') = #{month}
    </if>
    order by DATE_CREATED desc
    limit #{page.offset}, #{page.limit};
  </select>

  <select id="getMonthNewVipListForDirector" resultType="com.gialen.tools.dao.dto.CommunityDto">
    select h.CUSTOMER_ID as storeId, h.REAL_NAME as storeName,
    <if test="day != null">
      count(case when DATE_FORMAT(c.DATE_CREATED,'%Y%m%d') = #{day} then 1 else null end) as dayNewVipNum,
    </if>
    count(1) as monthNewVipNum
    from blc_customer c, blc_customer h
    where c.HIGHER_CUSTOMER_ID = h.CUSTOMER_ID and c.shop_store_id = #{directorId}
    and DATE_FORMAT(c.DATE_CREATED,'%Y%m') = #{month}
    and c.user_type = 'VIP'
    <if test="storeName != null and storeName != ''">
      and h.REAL_NAME like concat(#{storeName},"%")
    </if>
    GROUP BY c.HIGHER_CUSTOMER_ID
    order by count(1) desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="countMonthHasNewVipStoreNumForDirector" resultType="java.lang.Long">
    select count(DISTINCT c.HIGHER_CUSTOMER_ID)
    from blc_customer c, blc_customer h
    where c.HIGHER_CUSTOMER_ID = h.customer_id and c.shop_store_id = #{directorId} and DATE_FORMAT(c.DATE_CREATED,'%Y%m') = #{month}
    and c.user_type = 'VIP'
    <if test="storeName != null and storeName != ''">
      and h.REAL_NAME like concat(#{storeName},"%")
    </if>
  </select>

  <select id="getActivityOrSilenceStoreListForDirector" resultType="com.gialen.tools.dao.dto.ActivityUserDetailDto">
    select store.CUSTOMER_ID as userId, store.REAL_NAME as realName, super_store.REAL_NAME as invitor, IFNULL(sum(o.ORDER_TOTAL),0) as salesNum
    from blc_customer store
    join blc_customer_relation r on r.store_mgr_id = store.CUSTOMER_ID
    JOIN blc_customer c on r.customer_id = c.customer_id
    LEFT JOIN blc_customer super_store on store.HIGHER_CUSTOMER_ID = super_store.CUSTOMER_ID
    LEFT JOIN blc_order o on o.CUSTOMER_ID = c.CUSTOMER_ID and DATE_FORMAT(o.DATE_CREATED,'%Y%m') = #{month} and o.ORDER_PAY_STATUS = 'PAYED' and o.ORDER_STATUS != 'CANCELLED'
    where store.shop_store_id = #{directorId} and store.user_level_new_id = 1 and store.user_type = 'STORE'
    <if test="storeName != null and storeName != ''">
      and store.REAL_NAME like concat(#{storeName},"%")
    </if>
    group by store.CUSTOMER_ID
    <if test="dataType == 1">
      HAVING salesNum &gt; 0
    </if>
    <if test="dataType == 2">
      HAVING salesNum &lt;= 0
    </if>
    order by salesNum desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="countActivityOrSilenceStoreTotalForDirector" resultType="java.lang.Long">
    select count(1) from
    (select IFNULL(sum(o.ORDER_TOTAL),0) as salesNum
    from blc_customer store
    join blc_customer_relation r on r.store_mgr_id = store.CUSTOMER_ID
    JOIN blc_customer c on r.customer_id = c.customer_id
    LEFT JOIN blc_order o on o.CUSTOMER_ID = c.CUSTOMER_ID and DATE_FORMAT(o.DATE_CREATED,'%Y%m') = #{month} and o.ORDER_PAY_STATUS = 'PAYED' and o.ORDER_STATUS != 'CANCELLED'
    where store.shop_store_id = #{directorId} and store.user_level_new_id = 1 and store.user_type = 'STORE'
    <if test="storeName != null and storeName != ''">
      and store.REAL_NAME like concat(#{storeName},"%")
    </if>
    group by store.CUSTOMER_ID
    <if test="dataType == 1">
      HAVING salesNum &gt; 0
    </if>
    <if test="dataType == 2">
      HAVING salesNum &lt;= 0
    </if>
    ) t
  </select>

</mapper>