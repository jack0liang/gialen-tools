<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gialen.tools.dao.repository.gialen.RomaImportSuperCustomerRecordMapper">
  <resultMap id="BaseResultMap" type="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="import_customer_id" jdbcType="BIGINT" property="importCustomerId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="import_time" jdbcType="TIMESTAMP" property="importTime" />
    <result column="is_exist" jdbcType="BOOLEAN" property="isExist" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="original_store_super_mgr_id" jdbcType="BIGINT" property="originalStoreSuperMgrId" />
    <result column="original_store_id" jdbcType="BIGINT" property="originalStoreId" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="activated_time" jdbcType="TIMESTAMP" property="activatedTime" />
    <result column="expire_date" jdbcType="TIMESTAMP" property="expireDate" />
    <result column="handled_time" jdbcType="TIMESTAMP" property="handledTime" />
    <result column="is_delete" jdbcType="BOOLEAN" property="isDelete" />
    <result column="actually_activated_time" jdbcType="TIMESTAMP" property="actuallyActivatedTime" />
    <result column="expire_remain_time" jdbcType="INTEGER" property="expireRemainTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    import_customer_id, customer_id, import_time, is_exist, status, original_store_super_mgr_id, 
    original_store_id, create_time, activated_time, expire_date, handled_time, is_delete, 
    actually_activated_time, expire_remain_time
  </sql>
  <select id="selectByExample" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roma_import_super_customer_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and offset != null and limit &gt; 0">
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from roma_import_super_customer_record
    where import_customer_id = #{importCustomerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from roma_import_super_customer_record
    where import_customer_id = #{importCustomerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from roma_import_super_customer_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="import_customer_id" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into roma_import_super_customer_record (import_customer_id, customer_id, import_time, 
      is_exist, status, original_store_super_mgr_id, 
      original_store_id, create_time, activated_time, 
      expire_date, handled_time, is_delete, 
      actually_activated_time, expire_remain_time
      )
    values (#{importCustomerId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{importTime,jdbcType=TIMESTAMP}, 
      #{isExist,jdbcType=BOOLEAN}, #{status,jdbcType=VARCHAR}, #{originalStoreSuperMgrId,jdbcType=BIGINT}, 
      #{originalStoreId,jdbcType=BIGINT}, #{createTime,jdbcType=DATE}, #{activatedTime,jdbcType=TIMESTAMP}, 
      #{expireDate,jdbcType=TIMESTAMP}, #{handledTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BOOLEAN}, 
      #{actuallyActivatedTime,jdbcType=TIMESTAMP}, #{expireRemainTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="import_customer_id" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into roma_import_super_customer_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="importCustomerId != null">
        import_customer_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="importTime != null">
        import_time,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="originalStoreSuperMgrId != null">
        original_store_super_mgr_id,
      </if>
      <if test="originalStoreId != null">
        original_store_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="activatedTime != null">
        activated_time,
      </if>
      <if test="expireDate != null">
        expire_date,
      </if>
      <if test="handledTime != null">
        handled_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="actuallyActivatedTime != null">
        actually_activated_time,
      </if>
      <if test="expireRemainTime != null">
        expire_remain_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="importCustomerId != null">
        #{importCustomerId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="importTime != null">
        #{importTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=BOOLEAN},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="originalStoreSuperMgrId != null">
        #{originalStoreSuperMgrId,jdbcType=BIGINT},
      </if>
      <if test="originalStoreId != null">
        #{originalStoreId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="activatedTime != null">
        #{activatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="handledTime != null">
        #{handledTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="actuallyActivatedTime != null">
        #{actuallyActivatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireRemainTime != null">
        #{expireRemainTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from roma_import_super_customer_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update roma_import_super_customer_record
    <set>
      <if test="record.importCustomerId != null">
        import_customer_id = #{record.importCustomerId,jdbcType=BIGINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.importTime != null">
        import_time = #{record.importTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=BOOLEAN},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.originalStoreSuperMgrId != null">
        original_store_super_mgr_id = #{record.originalStoreSuperMgrId,jdbcType=BIGINT},
      </if>
      <if test="record.originalStoreId != null">
        original_store_id = #{record.originalStoreId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.activatedTime != null">
        activated_time = #{record.activatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireDate != null">
        expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handledTime != null">
        handled_time = #{record.handledTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="record.actuallyActivatedTime != null">
        actually_activated_time = #{record.actuallyActivatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireRemainTime != null">
        expire_remain_time = #{record.expireRemainTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update roma_import_super_customer_record
    set import_customer_id = #{record.importCustomerId,jdbcType=BIGINT},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      import_time = #{record.importTime,jdbcType=TIMESTAMP},
      is_exist = #{record.isExist,jdbcType=BOOLEAN},
      status = #{record.status,jdbcType=VARCHAR},
      original_store_super_mgr_id = #{record.originalStoreSuperMgrId,jdbcType=BIGINT},
      original_store_id = #{record.originalStoreId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=DATE},
      activated_time = #{record.activatedTime,jdbcType=TIMESTAMP},
      expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      handled_time = #{record.handledTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=BOOLEAN},
      actually_activated_time = #{record.actuallyActivatedTime,jdbcType=TIMESTAMP},
      expire_remain_time = #{record.expireRemainTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update roma_import_super_customer_record
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="importTime != null">
        import_time = #{importTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=BOOLEAN},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="originalStoreSuperMgrId != null">
        original_store_super_mgr_id = #{originalStoreSuperMgrId,jdbcType=BIGINT},
      </if>
      <if test="originalStoreId != null">
        original_store_id = #{originalStoreId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="activatedTime != null">
        activated_time = #{activatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireDate != null">
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="handledTime != null">
        handled_time = #{handledTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="actuallyActivatedTime != null">
        actually_activated_time = #{actuallyActivatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireRemainTime != null">
        expire_remain_time = #{expireRemainTime,jdbcType=INTEGER},
      </if>
    </set>
    where import_customer_id = #{importCustomerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gialen.tools.dao.entity.gialen.RomaImportSuperCustomerRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update roma_import_super_customer_record
    set customer_id = #{customerId,jdbcType=BIGINT},
      import_time = #{importTime,jdbcType=TIMESTAMP},
      is_exist = #{isExist,jdbcType=BOOLEAN},
      status = #{status,jdbcType=VARCHAR},
      original_store_super_mgr_id = #{originalStoreSuperMgrId,jdbcType=BIGINT},
      original_store_id = #{originalStoreId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=DATE},
      activated_time = #{activatedTime,jdbcType=TIMESTAMP},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      handled_time = #{handledTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BOOLEAN},
      actually_activated_time = #{actuallyActivatedTime,jdbcType=TIMESTAMP},
      expire_remain_time = #{expireRemainTime,jdbcType=INTEGER}
    where import_customer_id = #{importCustomerId,jdbcType=BIGINT}
  </update>
</mapper>