<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gialen.tools.dao.repository.order.PayRecordMapper">
  <resultMap id="BaseResultMap" type="com.gialen.tools.dao.entity.order.PayRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="pay_no" jdbcType="VARCHAR" property="payNo" />
    <result column="pay_money" jdbcType="DECIMAL" property="payMoney" />
    <result column="wallet_money" jdbcType="DECIMAL" property="walletMoney" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="wallet_pay_time" jdbcType="TIMESTAMP" property="walletPayTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="mch_id" jdbcType="VARCHAR" property="mchId" />
    <result column="wallet_pay_status" jdbcType="TINYINT" property="walletPayStatus" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="is_delete" jdbcType="BOOLEAN" property="isDelete" />
    <result column="data_version" jdbcType="INTEGER" property="dataVersion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, order_sn, pay_no, pay_money, wallet_money, pay_type, user_id, create_time, update_time, 
    trade_no, wallet_pay_time, pay_time, app_id, mch_id, wallet_pay_status, pay_status, 
    is_delete, data_version
  </sql>
  <select id="selectByExample" parameterType="com.gialen.tools.dao.entity.order.PayRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and offset != null and limit &gt; 0">
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pay_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pay_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gialen.tools.dao.entity.order.PayRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.gialen.tools.dao.entity.order.PayRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pay_record (id, order_sn, pay_no, 
      pay_money, wallet_money, pay_type, 
      user_id, create_time, update_time, 
      trade_no, wallet_pay_time, pay_time, 
      app_id, mch_id, wallet_pay_status, 
      pay_status, is_delete, data_version
      )
    values (#{id,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{payNo,jdbcType=VARCHAR}, 
      #{payMoney,jdbcType=DECIMAL}, #{walletMoney,jdbcType=DECIMAL}, #{payType,jdbcType=TINYINT}, 
      #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{tradeNo,jdbcType=VARCHAR}, #{walletPayTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{appId,jdbcType=VARCHAR}, #{mchId,jdbcType=VARCHAR}, #{walletPayStatus,jdbcType=TINYINT}, 
      #{payStatus,jdbcType=TINYINT}, #{isDelete,jdbcType=BOOLEAN}, #{dataVersion,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.gialen.tools.dao.entity.order.PayRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="payNo != null">
        pay_no,
      </if>
      <if test="payMoney != null">
        pay_money,
      </if>
      <if test="walletMoney != null">
        wallet_money,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="walletPayTime != null">
        wallet_pay_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
      <if test="walletPayStatus != null">
        wallet_pay_status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="dataVersion != null">
        data_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null">
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="walletMoney != null">
        #{walletMoney,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="walletPayTime != null">
        #{walletPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="walletPayStatus != null">
        #{walletPayStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="dataVersion != null">
        #{dataVersion,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gialen.tools.dao.entity.order.PayRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pay_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.payNo != null">
        pay_no = #{record.payNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payMoney != null">
        pay_money = #{record.payMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.walletMoney != null">
        wallet_money = #{record.walletMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.walletPayTime != null">
        wallet_pay_time = #{record.walletPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=VARCHAR},
      </if>
      <if test="record.walletPayStatus != null">
        wallet_pay_status = #{record.walletPayStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="record.dataVersion != null">
        data_version = #{record.dataVersion,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pay_record
    set id = #{record.id,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      pay_no = #{record.payNo,jdbcType=VARCHAR},
      pay_money = #{record.payMoney,jdbcType=DECIMAL},
      wallet_money = #{record.walletMoney,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      wallet_pay_time = #{record.walletPayTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      app_id = #{record.appId,jdbcType=VARCHAR},
      mch_id = #{record.mchId,jdbcType=VARCHAR},
      wallet_pay_status = #{record.walletPayStatus,jdbcType=TINYINT},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=BOOLEAN},
      data_version = #{record.dataVersion,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gialen.tools.dao.entity.order.PayRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pay_record
    <set>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        pay_money = #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="walletMoney != null">
        wallet_money = #{walletMoney,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="walletPayTime != null">
        wallet_pay_time = #{walletPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="walletPayStatus != null">
        wallet_pay_status = #{walletPayStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="dataVersion != null">
        data_version = #{dataVersion,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gialen.tools.dao.entity.order.PayRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pay_record
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      pay_no = #{payNo,jdbcType=VARCHAR},
      pay_money = #{payMoney,jdbcType=DECIMAL},
      wallet_money = #{walletMoney,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      wallet_pay_time = #{walletPayTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      app_id = #{appId,jdbcType=VARCHAR},
      mch_id = #{mchId,jdbcType=VARCHAR},
      wallet_pay_status = #{walletPayStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=BOOLEAN},
      data_version = #{dataVersion,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>