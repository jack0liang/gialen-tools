<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gialen.tools.dao.repository.tools.BigSuperMgrSalesMapper">
  <resultMap id="BaseResultMap" type="com.gialen.tools.dao.entity.tools.BigSuperMgrSales">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="super_mgr_id" jdbcType="BIGINT" property="superMgrId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="store_manger_num" jdbcType="INTEGER" property="storeMangerNum" />
    <result column="big_gift_bag_sales" jdbcType="DECIMAL" property="bigGiftBagSales" />
    <result column="total_sales" jdbcType="DECIMAL" property="totalSales" />
    <result column="total_commission" jdbcType="DECIMAL" property="totalCommission" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, super_mgr_id, phone, username, store_manger_num, big_gift_bag_sales, total_sales, 
    total_commission, month, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSalesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from big_super_mgr_sales
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and offset != null and limit &gt; 0">
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from big_super_mgr_sales
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from big_super_mgr_sales
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSalesExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from big_super_mgr_sales
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSales" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into big_super_mgr_sales (id, super_mgr_id, phone, 
      username, store_manger_num, big_gift_bag_sales, 
      total_sales, total_commission, month, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{superMgrId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{storeMangerNum,jdbcType=INTEGER}, #{bigGiftBagSales,jdbcType=DECIMAL}, 
      #{totalSales,jdbcType=DECIMAL}, #{totalCommission,jdbcType=DECIMAL}, #{month,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSales" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into big_super_mgr_sales
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="superMgrId != null">
        super_mgr_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="storeMangerNum != null">
        store_manger_num,
      </if>
      <if test="bigGiftBagSales != null">
        big_gift_bag_sales,
      </if>
      <if test="totalSales != null">
        total_sales,
      </if>
      <if test="totalCommission != null">
        total_commission,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="superMgrId != null">
        #{superMgrId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="storeMangerNum != null">
        #{storeMangerNum,jdbcType=INTEGER},
      </if>
      <if test="bigGiftBagSales != null">
        #{bigGiftBagSales,jdbcType=DECIMAL},
      </if>
      <if test="totalSales != null">
        #{totalSales,jdbcType=DECIMAL},
      </if>
      <if test="totalCommission != null">
        #{totalCommission,jdbcType=DECIMAL},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSalesExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from big_super_mgr_sales
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update big_super_mgr_sales
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.superMgrId != null">
        super_mgr_id = #{record.superMgrId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.storeMangerNum != null">
        store_manger_num = #{record.storeMangerNum,jdbcType=INTEGER},
      </if>
      <if test="record.bigGiftBagSales != null">
        big_gift_bag_sales = #{record.bigGiftBagSales,jdbcType=DECIMAL},
      </if>
      <if test="record.totalSales != null">
        total_sales = #{record.totalSales,jdbcType=DECIMAL},
      </if>
      <if test="record.totalCommission != null">
        total_commission = #{record.totalCommission,jdbcType=DECIMAL},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update big_super_mgr_sales
    set id = #{record.id,jdbcType=BIGINT},
      super_mgr_id = #{record.superMgrId,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      store_manger_num = #{record.storeMangerNum,jdbcType=INTEGER},
      big_gift_bag_sales = #{record.bigGiftBagSales,jdbcType=DECIMAL},
      total_sales = #{record.totalSales,jdbcType=DECIMAL},
      total_commission = #{record.totalCommission,jdbcType=DECIMAL},
      month = #{record.month,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSales">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update big_super_mgr_sales
    <set>
      <if test="superMgrId != null">
        super_mgr_id = #{superMgrId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="storeMangerNum != null">
        store_manger_num = #{storeMangerNum,jdbcType=INTEGER},
      </if>
      <if test="bigGiftBagSales != null">
        big_gift_bag_sales = #{bigGiftBagSales,jdbcType=DECIMAL},
      </if>
      <if test="totalSales != null">
        total_sales = #{totalSales,jdbcType=DECIMAL},
      </if>
      <if test="totalCommission != null">
        total_commission = #{totalCommission,jdbcType=DECIMAL},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gialen.tools.dao.entity.tools.BigSuperMgrSales">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update big_super_mgr_sales
    set super_mgr_id = #{superMgrId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      store_manger_num = #{storeMangerNum,jdbcType=INTEGER},
      big_gift_bag_sales = #{bigGiftBagSales,jdbcType=DECIMAL},
      total_sales = #{totalSales,jdbcType=DECIMAL},
      total_commission = #{totalCommission,jdbcType=DECIMAL},
      month = #{month,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsertBigSuperMgrSales">
    insert into big_super_mgr_sales (super_mgr_id, phone, username, store_manger_num, big_gift_bag_sales, total_sales, total_commission, `month`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.superMgrId}, #{item.phone}, #{item.username}, #{item.storeMangerNum}, #{item.bigGiftBagSales}, #{item.totalSales}, #{item.totalCommission}, #{item.month})
    </foreach>
  </insert>
</mapper>